src/codeshine/Activator.java:15:	fieldCommentRequirement Required
src/codeshine/Activator.java:18:	Possible unsafe assignment to a non-final static field in a constructor.
src/codeshine/Activator.java:18:	fieldCommentRequirement Required
src/codeshine/Activator.java:20:	fieldCommentRequirement Required
src/codeshine/Activator.java:25:	It is a good practice to call super() in a constructor
src/codeshine/Activator.java:31:	Comment is too large: Line too long
src/codeshine/Activator.java:33:	A method/constructor shouldnt explicitly throw java.lang.Exception
src/codeshine/Activator.java:33:	Parameter 'context' is not assigned and could be declared final
src/codeshine/Activator.java:33:	publicMethodCommentRequirement Required
src/codeshine/Activator.java:36:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/Activator.java:36:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/Activator.java:41:	Comment is too large: Line too long
src/codeshine/Activator.java:43:	A method/constructor shouldnt explicitly throw java.lang.Exception
src/codeshine/Activator.java:43:	Parameter 'context' is not assigned and could be declared final
src/codeshine/Activator.java:43:	publicMethodCommentRequirement Required
src/codeshine/Activator.java:44:	Assigning an Object to null is a code smell.  Consider refactoring.
src/codeshine/Activator.java:65:	Parameter 'path' is not assigned and could be declared final
src/codeshine/preferences/CodeAppearancePreferencePage.java:23:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodeAppearancePreferencePage.java:23:	To avoid mistakes add a comment at the beginning of the textColourFE field if you want a default access modifier
src/codeshine/preferences/CodeAppearancePreferencePage.java:23:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeAppearancePreferencePage.java:24:	Avoid excessively long variable names like backgroundColourFE
src/codeshine/preferences/CodeAppearancePreferencePage.java:24:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodeAppearancePreferencePage.java:24:	To avoid mistakes add a comment at the beginning of the backgroundColourFE field if you want a default access modifier
src/codeshine/preferences/CodeAppearancePreferencePage.java:24:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeAppearancePreferencePage.java:24:	fieldCommentRequirement Required
src/codeshine/preferences/CodeAppearancePreferencePage.java:25:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodeAppearancePreferencePage.java:25:	To avoid mistakes add a comment at the beginning of the hightlightFE field if you want a default access modifier
src/codeshine/preferences/CodeAppearancePreferencePage.java:25:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeAppearancePreferencePage.java:25:	fieldCommentRequirement Required
src/codeshine/preferences/CodeAppearancePreferencePage.java:26:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodeAppearancePreferencePage.java:26:	To avoid mistakes add a comment at the beginning of the fontFE field if you want a default access modifier
src/codeshine/preferences/CodeAppearancePreferencePage.java:26:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeAppearancePreferencePage.java:26:	fieldCommentRequirement Required
src/codeshine/preferences/CodeAppearancePreferencePage.java:27:	To avoid mistakes add a comment at the beginning of the customProfileFE field if you want a default access modifier
src/codeshine/preferences/CodeAppearancePreferencePage.java:27:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeAppearancePreferencePage.java:27:	fieldCommentRequirement Required
src/codeshine/preferences/CodeAppearancePreferencePage.java:28:	To avoid mistakes add a comment at the beginning of the fontLabel field if you want a default access modifier
src/codeshine/preferences/CodeAppearancePreferencePage.java:28:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeAppearancePreferencePage.java:28:	fieldCommentRequirement Required
src/codeshine/preferences/CodeAppearancePreferencePage.java:30:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeAppearancePreferencePage.java:32:	Local variable 'preferenceStore' could be declared final
src/codeshine/preferences/CodeAppearancePreferencePage.java:36:	Parameter 'image' is not assigned and could be declared final
src/codeshine/preferences/CodeAppearancePreferencePage.java:36:	Parameter 'style' is not assigned and could be declared final
src/codeshine/preferences/CodeAppearancePreferencePage.java:36:	Parameter 'title' is not assigned and could be declared final
src/codeshine/preferences/CodeAppearancePreferencePage.java:36:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeAppearancePreferencePage.java:43:	Parameter 'workbench' is not assigned and could be declared final
src/codeshine/preferences/CodeAppearancePreferencePage.java:43:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeAppearancePreferencePage.java:44:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeAppearancePreferencePage.java:44:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeAppearancePreferencePage.java:51:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeAppearancePreferencePage.java:59:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeAppearancePreferencePage.java:68:	Comment is too large: Line too long
src/codeshine/preferences/CodeAppearancePreferencePage.java:71:	protectedMethodCommentRequirement Required
src/codeshine/preferences/CodeAppearancePreferencePage.java:79:	protectedMethodCommentRequirement Required
src/codeshine/preferences/CodeAppearancePreferencePage.java:80:	Comment is too large: Line too long
src/codeshine/preferences/CodeAppearancePreferencePage.java:100:	Avoid excessively long variable names like preferenceListener
src/codeshine/preferences/CodeAppearancePreferencePage.java:100:	Local variable 'preferenceListener' could be declared final
src/codeshine/preferences/CodeAppearancePreferencePage.java:101:	Parameter 'event' is not assigned and could be declared final
src/codeshine/preferences/CodeAppearancePreferencePage.java:101:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeAppearancePreferencePage.java:102:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeAppearancePreferencePage.java:103:	System.out.println is used
src/codeshine/preferences/CodeAppearancePreferencePage.java:104:	Avoid variables with short names like b
src/codeshine/preferences/CodeAppearancePreferencePage.java:104:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeAppearancePreferencePage.java:104:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeAppearancePreferencePage.java:112:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeAppearancePreferencePage.java:112:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodePreferencePage.java:6:	Avoid unused imports such as 'org.eclipse.jdt.internal.ui.preferences.formatter.ProfileManager.CustomProfile'
src/codeshine/preferences/CodePreferencePage.java:8:	Avoid unused imports such as 'codeshine.speech.TtsClass'
src/codeshine/preferences/CodePreferencePage.java:11:	Comment is too large: Too many lines
src/codeshine/preferences/CodePreferencePage.java:29:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodePreferencePage.java:29:	fieldCommentRequirement Required
src/codeshine/preferences/CodePreferencePage.java:30:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodePreferencePage.java:30:	fieldCommentRequirement Required
src/codeshine/preferences/CodePreferencePage.java:31:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodePreferencePage.java:31:	fieldCommentRequirement Required
src/codeshine/preferences/CodePreferencePage.java:33:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodePreferencePage.java:50:	Comment is too large: Line too long
src/codeshine/preferences/CodePreferencePage.java:52:	Comment is too large: Too many lines
src/codeshine/preferences/CodePreferencePage.java:52:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodePreferencePage.java:52:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodePreferencePage.java:59:	Parameter 'workbench' is not assigned and could be declared final
src/codeshine/preferences/CodePreferencePage.java:59:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodePreferencePage.java:60:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodePreferencePage.java:60:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodePreferencePage.java:63:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:4:	A high number of imports can indicate a high degree of coupling within an object.
src/codeshine/preferences/CodeProfilesPreferencePage.java:7:	Avoid unused imports such as 'org.eclipse.swt.widgets.Button'
src/codeshine/preferences/CodeProfilesPreferencePage.java:13:	Avoid unused imports such as 'org.eclipse.jface.resource.ImageDescriptor'
src/codeshine/preferences/CodeProfilesPreferencePage.java:15:	Avoid unused imports such as 'org.eclipse.jface.viewers.ArrayContentProvider'
src/codeshine/preferences/CodeProfilesPreferencePage.java:19:	Avoid unused imports such as 'org.eclipse.jface.viewers.CellEditor.LayoutData'
src/codeshine/preferences/CodeProfilesPreferencePage.java:20:	Avoid unused imports such as 'org.eclipse.swt.widgets.Label'
src/codeshine/preferences/CodeProfilesPreferencePage.java:23:	Avoid unused imports such as 'org.eclipse.swt.widgets.Table'
src/codeshine/preferences/CodeProfilesPreferencePage.java:23:	Avoid unused imports such as 'org.eclipse.swt.widgets.TableColumn'
src/codeshine/preferences/CodeProfilesPreferencePage.java:28:	Avoid unused imports such as 'codeshine.speech.TtsClass'
src/codeshine/preferences/CodeProfilesPreferencePage.java:30:	The class 'CodeProfilesPreferencePage' has a Cyclomatic Complexity of 3 (Highest = 10).
src/codeshine/preferences/CodeProfilesPreferencePage.java:33:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodeProfilesPreferencePage.java:33:	To avoid mistakes add a comment at the beginning of the tcProvider field if you want a default access modifier
src/codeshine/preferences/CodeProfilesPreferencePage.java:33:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeProfilesPreferencePage.java:33:	fieldCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:34:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodeProfilesPreferencePage.java:34:	To avoid mistakes add a comment at the beginning of the tlProvider field if you want a default access modifier
src/codeshine/preferences/CodeProfilesPreferencePage.java:34:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeProfilesPreferencePage.java:34:	fieldCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:35:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodeProfilesPreferencePage.java:35:	To avoid mistakes add a comment at the beginning of the headers field if you want a default access modifier
src/codeshine/preferences/CodeProfilesPreferencePage.java:35:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeProfilesPreferencePage.java:35:	fieldCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:36:	To avoid mistakes add a comment at the beginning of the viewer field if you want a default access modifier
src/codeshine/preferences/CodeProfilesPreferencePage.java:36:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeProfilesPreferencePage.java:36:	fieldCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:37:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodeProfilesPreferencePage.java:37:	To avoid mistakes add a comment at the beginning of the tableFE field if you want a default access modifier
src/codeshine/preferences/CodeProfilesPreferencePage.java:37:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeProfilesPreferencePage.java:37:	fieldCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:38:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodeProfilesPreferencePage.java:38:	To avoid mistakes add a comment at the beginning of the fileFE field if you want a default access modifier
src/codeshine/preferences/CodeProfilesPreferencePage.java:38:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeProfilesPreferencePage.java:38:	fieldCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:39:	Avoid using redundant field initializer for 'attributes'
src/codeshine/preferences/CodeProfilesPreferencePage.java:39:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodeProfilesPreferencePage.java:39:	To avoid mistakes add a comment at the beginning of the attributes field if you want a default access modifier
src/codeshine/preferences/CodeProfilesPreferencePage.java:39:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeProfilesPreferencePage.java:39:	fieldCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:40:	Avoid variables with short names like f
src/codeshine/preferences/CodeProfilesPreferencePage.java:40:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodeProfilesPreferencePage.java:40:	To avoid mistakes add a comment at the beginning of the f field if you want a default access modifier
src/codeshine/preferences/CodeProfilesPreferencePage.java:40:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeProfilesPreferencePage.java:40:	fieldCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:41:	Avoid using redundant field initializer for 'done'
src/codeshine/preferences/CodeProfilesPreferencePage.java:41:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodeProfilesPreferencePage.java:41:	To avoid mistakes add a comment at the beginning of the done field if you want a default access modifier
src/codeshine/preferences/CodeProfilesPreferencePage.java:41:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeProfilesPreferencePage.java:41:	fieldCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:48:	Local variable 'preferenceStore' could be declared final
src/codeshine/preferences/CodeProfilesPreferencePage.java:61:	The method 'createFieldEditors' has a Cyclomatic Complexity of 10.
src/codeshine/preferences/CodeProfilesPreferencePage.java:63:	Local variable 'extensions' could be declared final
src/codeshine/preferences/CodeProfilesPreferencePage.java:67:	Comment is too large: Line too long
src/codeshine/preferences/CodeProfilesPreferencePage.java:68:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:68:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:69:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/preferences/CodeProfilesPreferencePage.java:73:	System.out.println is used
src/codeshine/preferences/CodeProfilesPreferencePage.java:88:	Local variable 'modifyListener' could be declared final
src/codeshine/preferences/CodeProfilesPreferencePage.java:89:	Avoid variables with short names like e
src/codeshine/preferences/CodeProfilesPreferencePage.java:89:	Parameter 'e' is not assigned and could be declared final
src/codeshine/preferences/CodeProfilesPreferencePage.java:89:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:93:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:93:	Useless parentheses.
src/codeshine/preferences/CodeProfilesPreferencePage.java:93:	Useless parentheses.
src/codeshine/preferences/CodeProfilesPreferencePage.java:94:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:94:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:100:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/codeshine/preferences/CodeProfilesPreferencePage.java:100:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/preferences/CodeProfilesPreferencePage.java:101:	System.out.println is used
src/codeshine/preferences/CodeProfilesPreferencePage.java:102:	System.out.println is used
src/codeshine/preferences/CodeProfilesPreferencePage.java:104:	System.out.println is used
src/codeshine/preferences/CodeProfilesPreferencePage.java:109:	System.out.println is used
src/codeshine/preferences/CodeProfilesPreferencePage.java:114:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:114:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:116:	Avoid excessively long variable names like preferenceListener
src/codeshine/preferences/CodeProfilesPreferencePage.java:116:	Local variable 'preferenceListener' could be declared final
src/codeshine/preferences/CodeProfilesPreferencePage.java:118:	Parameter 'event' is not assigned and could be declared final
src/codeshine/preferences/CodeProfilesPreferencePage.java:118:	Unnecessary use of fully qualified name 'org.eclipse.jface.util.PropertyChangeEvent' due to existing import 'org.eclipse.jface.util.PropertyChangeEvent'
src/codeshine/preferences/CodeProfilesPreferencePage.java:118:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:119:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:119:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:119:	System.out.println is used
src/codeshine/preferences/CodeProfilesPreferencePage.java:125:	Avoid excessively long variable names like profilesPrefListener
src/codeshine/preferences/CodeProfilesPreferencePage.java:125:	Local variable 'profilesPrefListener' could be declared final
src/codeshine/preferences/CodeProfilesPreferencePage.java:126:	Parameter 'event' is not assigned and could be declared final
src/codeshine/preferences/CodeProfilesPreferencePage.java:126:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:127:	System.out.println is used
src/codeshine/preferences/CodeProfilesPreferencePage.java:128:	System.out.println is used
src/codeshine/preferences/CodeProfilesPreferencePage.java:129:	System.out.println is used
src/codeshine/preferences/CodeProfilesPreferencePage.java:134:	Comment is too large: Line too long
src/codeshine/preferences/CodeProfilesPreferencePage.java:139:	Parameter 'workbench' is not assigned and could be declared final
src/codeshine/preferences/CodeProfilesPreferencePage.java:139:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:141:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:141:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:143:	protectedMethodCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:148:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeProfilesPreferencePage.java:149:	System.out.println is used
src/codeshine/preferences/CodeProfilesPreferencePage.java:150:	Local variable 'newFile' could be declared final
src/codeshine/preferences/CodeProfilesPreferencePage.java:155:	Potential violation of Law of Demeter (static property access)
src/codeshine/preferences/CodeProfilesPreferencePage.java:156:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:156:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:156:	System.out.println is used
src/codeshine/preferences/CodeProfilesPreferencePage.java:157:	System.out.println is used
src/codeshine/preferences/CodeProfilesPreferencePage.java:158:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:158:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:162:	Avoid variables with short names like fd
src/codeshine/preferences/CodeProfilesPreferencePage.java:162:	Local variable 'fd' could be declared final
src/codeshine/preferences/CodeProfilesPreferencePage.java:164:	Local variable 'selectedFile' could be declared final
src/codeshine/preferences/CodeProfilesPreferencePage.java:165:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:165:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeProfilesPreferencePage.java:174:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeSpeechPreferencePage.java:8:	Avoid unused imports such as 'org.eclipse.jface.preference.FileFieldEditor'
src/codeshine/preferences/CodeSpeechPreferencePage.java:10:	Avoid unused imports such as 'org.eclipse.jface.preference.RadioGroupFieldEditor'
src/codeshine/preferences/CodeSpeechPreferencePage.java:13:	Avoid unused imports such as 'org.eclipse.jface.resource.ImageDescriptor'
src/codeshine/preferences/CodeSpeechPreferencePage.java:18:	Avoid unused imports such as 'org.eclipse.swt.events.ControlEvent'
src/codeshine/preferences/CodeSpeechPreferencePage.java:19:	Avoid unused imports such as 'org.eclipse.swt.events.ControlListener'
src/codeshine/preferences/CodeSpeechPreferencePage.java:25:	Avoid duplicate imports such as 'org.eclipse.swt.widgets.Event'
src/codeshine/preferences/CodeSpeechPreferencePage.java:33:	Avoid unused imports such as 'com.sun.speech.freetts.Voice'
src/codeshine/preferences/CodeSpeechPreferencePage.java:34:	Avoid unused imports such as 'com.sun.speech.freetts.VoiceManager'
src/codeshine/preferences/CodeSpeechPreferencePage.java:44:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodeSpeechPreferencePage.java:44:	To avoid mistakes add a comment at the beginning of the trainingText field if you want a default access modifier
src/codeshine/preferences/CodeSpeechPreferencePage.java:44:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeSpeechPreferencePage.java:44:	fieldCommentRequirement Required
src/codeshine/preferences/CodeSpeechPreferencePage.java:45:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/preferences/CodeSpeechPreferencePage.java:45:	To avoid mistakes add a comment at the beginning of the pitch field if you want a default access modifier
src/codeshine/preferences/CodeSpeechPreferencePage.java:45:	Use explicit scoping instead of the default package private level
src/codeshine/preferences/CodeSpeechPreferencePage.java:45:	fieldCommentRequirement Required
src/codeshine/preferences/CodeSpeechPreferencePage.java:54:	Local variable 'preferenceStore' could be declared final
src/codeshine/preferences/CodeSpeechPreferencePage.java:59:	Comment is too large: Line too long
src/codeshine/preferences/CodeSpeechPreferencePage.java:61:	protectedMethodCommentRequirement Required
src/codeshine/preferences/CodeSpeechPreferencePage.java:68:	Local variable 'testVoice' could be declared final
src/codeshine/preferences/CodeSpeechPreferencePage.java:70:	Avoid variables with short names like gd
src/codeshine/preferences/CodeSpeechPreferencePage.java:70:	Local variable 'gd' could be declared final
src/codeshine/preferences/CodeSpeechPreferencePage.java:75:	Local variable 'listener' could be declared final
src/codeshine/preferences/CodeSpeechPreferencePage.java:76:	Parameter 'event' is not assigned and could be declared final
src/codeshine/preferences/CodeSpeechPreferencePage.java:76:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeSpeechPreferencePage.java:79:	Potential violation of Law of Demeter (static property access)
src/codeshine/preferences/CodeSpeechPreferencePage.java:80:	Potential violation of Law of Demeter (static property access)
src/codeshine/preferences/CodeSpeechPreferencePage.java:81:	System.out.println is used
src/codeshine/preferences/CodeSpeechPreferencePage.java:82:	System.out.println is used
src/codeshine/preferences/CodeSpeechPreferencePage.java:92:	Avoid variables with short names like e
src/codeshine/preferences/CodeSpeechPreferencePage.java:92:	Document empty method body
src/codeshine/preferences/CodeSpeechPreferencePage.java:92:	Parameter 'e' is not assigned and could be declared final
src/codeshine/preferences/CodeSpeechPreferencePage.java:92:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeSpeechPreferencePage.java:95:	Avoid variables with short names like e
src/codeshine/preferences/CodeSpeechPreferencePage.java:95:	Parameter 'e' is not assigned and could be declared final
src/codeshine/preferences/CodeSpeechPreferencePage.java:95:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeSpeechPreferencePage.java:97:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeSpeechPreferencePage.java:97:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeSpeechPreferencePage.java:97:	System.out.println is used
src/codeshine/preferences/CodeSpeechPreferencePage.java:100:	Avoid excessively long variable names like preferenceListener
src/codeshine/preferences/CodeSpeechPreferencePage.java:100:	Local variable 'preferenceListener' could be declared final
src/codeshine/preferences/CodeSpeechPreferencePage.java:102:	Parameter 'event' is not assigned and could be declared final
src/codeshine/preferences/CodeSpeechPreferencePage.java:102:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeSpeechPreferencePage.java:104:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeSpeechPreferencePage.java:104:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeSpeechPreferencePage.java:104:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeSpeechPreferencePage.java:104:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeSpeechPreferencePage.java:104:	System.out.println is used
src/codeshine/preferences/CodeSpeechPreferencePage.java:110:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeSpeechPreferencePage.java:110:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeSpeechPreferencePage.java:117:	Parameter 'workbench' is not assigned and could be declared final
src/codeshine/preferences/CodeSpeechPreferencePage.java:117:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeSpeechPreferencePage.java:118:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeSpeechPreferencePage.java:118:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/CodeSpeechPreferencePage.java:121:	publicMethodCommentRequirement Required
src/codeshine/preferences/CodeSpeechPreferencePage.java:126:	Overriding method merely calls super
src/codeshine/preferences/CodeSpeechPreferencePage.java:126:	publicMethodCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:9:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:9:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:9:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:10:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:10:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:10:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:11:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:11:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:11:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:12:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:12:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:12:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:13:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:13:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:13:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:14:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:14:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:14:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:15:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:15:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:15:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:16:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:16:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:16:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:17:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:17:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:17:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:18:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:18:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:18:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:19:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:19:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:19:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:20:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:20:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:20:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:21:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:21:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:21:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:22:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:22:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:22:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:23:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:23:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:23:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:24:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:24:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:24:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:25:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:25:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:25:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:26:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:26:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:26:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:27:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:27:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:27:	fieldCommentRequirement Required
src/codeshine/preferences/IPreferenceConstants.java:28:	Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/codeshine/preferences/IPreferenceConstants.java:28:	Avoid modifiers which are implied by the context
src/codeshine/preferences/IPreferenceConstants.java:28:	fieldCommentRequirement Required
src/codeshine/preferences/PreferenceInitializer.java:3:	Avoid unused imports such as 'org.eclipse.swt.graphics.Color'
src/codeshine/preferences/PreferenceInitializer.java:6:	No need to import a type that lives in the same package
src/codeshine/preferences/PreferenceInitializer.java:13:	Each class should declare at least one constructor
src/codeshine/preferences/PreferenceInitializer.java:18:	Comment is too large: Line too long
src/codeshine/preferences/PreferenceInitializer.java:20:	publicMethodCommentRequirement Required
src/codeshine/preferences/PreferenceInitializer.java:21:	Local variable 'store' could be declared final
src/codeshine/preferences/PreferenceInitializer.java:21:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/preferences/PreferenceInitializer.java:22:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/preferences/PreferenceInitializer.java:23:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/preferences/PreferenceInitializer.java:24:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/preferences/PreferenceInitializer.java:26:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/preferences/PreferenceInitializer.java:27:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/preferences/ProfileConfigProvider.java:10:	headerCommentRequirement Required
src/codeshine/preferences/ProfileConfigProvider.java:13:	Avoid unnecessary constructors - the compiler will generate these for you
src/codeshine/preferences/ProfileConfigProvider.java:13:	publicMethodCommentRequirement Required
src/codeshine/preferences/ProfileConfigProvider.java:18:	Parameter 'columnIndex' is not assigned and could be declared final
src/codeshine/preferences/ProfileConfigProvider.java:18:	Parameter 'element' is not assigned and could be declared final
src/codeshine/preferences/ProfileConfigProvider.java:18:	publicMethodCommentRequirement Required
src/codeshine/preferences/ProfileConfigProvider.java:20:	Avoid variables with short names like t
src/codeshine/preferences/ProfileConfigProvider.java:24:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/preferences/ProfileConfigProvider.java:27:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/preferences/ProfileConfigProvider.java:31:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/preferences/ProfileConfigProvider.java:35:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/preferences/ProfileConfigProvider.java:39:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/preferences/ProfileConfigProvider.java:46:	Parameter 'newInput' is not assigned and could be declared final
src/codeshine/preferences/ProfileConfigProvider.java:46:	Parameter 'oldInput' is not assigned and could be declared final
src/codeshine/preferences/ProfileConfigProvider.java:46:	Parameter 'viewer' is not assigned and could be declared final
src/codeshine/preferences/ProfileConfigProvider.java:46:	publicMethodCommentRequirement Required
src/codeshine/preferences/ProfileConfigProvider.java:47:	System.out.println is used
src/codeshine/preferences/ProfileConfigProvider.java:50:	Avoid using if...else statements without curly braces
src/codeshine/preferences/ProfileConfigProvider.java:50:	System.out.println is used
src/codeshine/preferences/ProfileConfigProvider.java:51:	Avoid using if statements without curly braces
src/codeshine/preferences/ProfileConfigProvider.java:52:	System.out.println is used
src/codeshine/preferences/ProfileConfigProvider.java:53:	Avoid catching NullPointerException; consider removing the cause of the NPE.
src/codeshine/preferences/ProfileConfigProvider.java:53:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/codeshine/preferences/ProfileConfigProvider.java:53:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/preferences/ProfileConfigProvider.java:55:	Parameter 'collection' is not assigned and could be declared final
src/codeshine/preferences/ProfileConfigProvider.java:55:	publicMethodCommentRequirement Required
src/codeshine/preferences/ProfileConfigProvider.java:59:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/preferences/ProfileConfigProvider.java:61:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/preferences/ProfileConfigProvider.java:61:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/preferences/ProfileConfigProvider.java:61:	This statement may have some unnecessary parentheses
src/codeshine/preferences/ProfileConfigProvider.java:61:	Useless parentheses.
src/codeshine/speech/AudioCommon.java:7:	Comment is too large: Too many lines
src/codeshine/speech/AudioCommon.java:55:	The class 'AudioCommon' has a Cyclomatic Complexity of 3 (Highest = 11).
src/codeshine/speech/AudioCommon.java:55:	The class 'AudioCommon' has a Modified Cyclomatic Complexity of 3 (Highest = 11).
src/codeshine/speech/AudioCommon.java:55:	The class 'AudioCommon' has a Standard Cyclomatic Complexity of 3 (Highest = 11).
src/codeshine/speech/AudioCommon.java:56:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
src/codeshine/speech/AudioCommon.java:57:	Avoid using redundant field initializer for 'DEBUG'
src/codeshine/speech/AudioCommon.java:57:	The field name indicates a constant but its modifiers do not
src/codeshine/speech/AudioCommon.java:57:	Variables should start with a lowercase character, 'DEBUG' starts with uppercase character.
src/codeshine/speech/AudioCommon.java:57:	fieldCommentRequirement Required
src/codeshine/speech/AudioCommon.java:61:	Parameter 'bDebug' is not assigned and could be declared final
src/codeshine/speech/AudioCommon.java:61:	publicMethodCommentRequirement Required
src/codeshine/speech/AudioCommon.java:73:	Local variable 'aTypes' could be declared final
src/codeshine/speech/AudioCommon.java:76:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:76:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:76:	Prefer StringBuffer over += for concatenating strings
src/codeshine/speech/AudioCommon.java:90:	Parameter 'strExtension' is not assigned and could be declared final
src/codeshine/speech/AudioCommon.java:92:	Local variable 'aTypes' could be declared final
src/codeshine/speech/AudioCommon.java:95:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:95:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:95:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:97:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/speech/AudioCommon.java:110:	Local variable 'aInfos' could be declared final
src/codeshine/speech/AudioCommon.java:113:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:113:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:113:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:113:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:119:	System.exit() should not be used in J2EE/JEE apps
src/codeshine/speech/AudioCommon.java:128:	Parameter 'bPlayback' is not assigned and could be declared final
src/codeshine/speech/AudioCommon.java:131:	Local variable 'aInfos' could be declared final
src/codeshine/speech/AudioCommon.java:134:	Local variable 'mixer' could be declared final
src/codeshine/speech/AudioCommon.java:134:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:135:	Avoid instantiating new objects inside loops
src/codeshine/speech/AudioCommon.java:135:	Local variable 'lineInfo' could be declared final
src/codeshine/speech/AudioCommon.java:138:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioCommon.java:140:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:140:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:140:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:140:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:147:	System.exit() should not be used in J2EE/JEE apps
src/codeshine/speech/AudioCommon.java:157:	Parameter 'strMixerName' is not assigned and could be declared final
src/codeshine/speech/AudioCommon.java:159:	Local variable 'aInfos' could be declared final
src/codeshine/speech/AudioCommon.java:162:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:162:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:162:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioCommon.java:164:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/speech/AudioCommon.java:174:	Parameter 'strMixerName' is not assigned and could be declared final
src/codeshine/speech/AudioCommon.java:174:	The method 'getTargetDataLine' has a Cyclomatic Complexity of 11.
src/codeshine/speech/AudioCommon.java:174:	The method 'getTargetDataLine' has a Modified Cyclomatic Complexity of 11.
src/codeshine/speech/AudioCommon.java:174:	The method 'getTargetDataLine' has a Standard Cyclomatic Complexity of 11.
src/codeshine/speech/AudioCommon.java:175:	Parameter 'audioFormat' is not assigned and could be declared final
src/codeshine/speech/AudioCommon.java:176:	Parameter 'nBufferSize' is not assigned and could be declared final
src/codeshine/speech/AudioCommon.java:178:	Comment is too large: Too many lines
src/codeshine/speech/AudioCommon.java:198:	Local variable 'info' could be declared final
src/codeshine/speech/AudioCommon.java:202:	Avoid if (x != y) ..; else ..;
src/codeshine/speech/AudioCommon.java:204:	Local variable 'mixerInfo' could be declared final
src/codeshine/speech/AudioCommon.java:208:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/speech/AudioCommon.java:210:	Local variable 'mixer' could be declared final
src/codeshine/speech/AudioCommon.java:211:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioCommon.java:224:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioCommon.java:229:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/speech/AudioCommon.java:231:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/codeshine/speech/AudioCommon.java:233:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/speech/AudioCommon.java:242:	Parameter 'encoding' is not assigned and could be declared final
src/codeshine/speech/AudioCommon.java:251:	Parameter 'strMessage' is not assigned and could be declared final
src/codeshine/speech/AudioCommon.java:253:	System.out.println is used
src/codeshine/speech/AudioRecorder.java:7:	Comment is too large: Too many lines
src/codeshine/speech/AudioRecorder.java:62:	Comment is too large: Too many lines
src/codeshine/speech/AudioRecorder.java:83:	Too many fields
src/codeshine/speech/AudioRecorder.java:85:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:103:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:104:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:105:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:106:	Avoid excessively long variable names like DEFAULT_TARGET_TYPE
src/codeshine/speech/AudioRecorder.java:106:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:109:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:109:	Private field 'strMixerName' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:110:	Avoid excessively long variable names like nInternalBufferSize
src/codeshine/speech/AudioRecorder.java:110:	Avoid unused private fields such as 'strFormat'.
src/codeshine/speech/AudioRecorder.java:110:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:110:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:110:	Perhaps 'strFormat' could be replaced by a local variable.
src/codeshine/speech/AudioRecorder.java:110:	Private field 'nInternalBufferSize' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:110:	Private field 'strFormat' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:110:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:110:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:112:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:112:	Perhaps 'nChannels' could be replaced by a local variable.
src/codeshine/speech/AudioRecorder.java:112:	Private field 'nChannels' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:112:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:113:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:113:	Perhaps 'fRate' could be replaced by a local variable.
src/codeshine/speech/AudioRecorder.java:113:	Private field 'fRate' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:113:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:114:	Avoid unused private fields such as 'strExtension'.
src/codeshine/speech/AudioRecorder.java:114:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:114:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:114:	Perhaps 'strExtension' could be replaced by a local variable.
src/codeshine/speech/AudioRecorder.java:114:	Perhaps 'strPath' could be replaced by a local variable.
src/codeshine/speech/AudioRecorder.java:114:	Private field 'strExtension' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:114:	Private field 'strPath' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:114:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:114:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:116:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:116:	Private field 'strFilename' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:116:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:117:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:117:	Private field 'targetType' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:117:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:120:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:121:	Avoid excessively long variable names like nOutputFormatIndex
src/codeshine/speech/AudioRecorder.java:121:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:121:	Perhaps 'nOutputFormatIndex' could be replaced by a local variable.
src/codeshine/speech/AudioRecorder.java:121:	Private field 'nOutputFormatIndex' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:121:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:122:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:122:	Perhaps 'nBitsPerSample' could be replaced by a local variable.
src/codeshine/speech/AudioRecorder.java:122:	Private field 'nBitsPerSample' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:122:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:123:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:123:	Perhaps 'bBigEndian' could be replaced by a local variable.
src/codeshine/speech/AudioRecorder.java:123:	Private field 'bBigEndian' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:123:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:124:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:124:	Perhaps 'nFrameSize' could be replaced by a local variable.
src/codeshine/speech/AudioRecorder.java:124:	Private field 'nFrameSize' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:124:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:125:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:125:	Private field 'audioFormat' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:125:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:126:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:126:	Perhaps 'encoding' could be replaced by a local variable.
src/codeshine/speech/AudioRecorder.java:126:	Private field 'encoding' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:126:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:129:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:130:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:130:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:133:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:133:	Private field 'iatrosCeps' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:134:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:134:	Perhaps 'iatrosOff' could be replaced by a local variable.
src/codeshine/speech/AudioRecorder.java:134:	Private field 'iatrosOff' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:134:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:135:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:135:	Private field 'outFile' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:135:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:136:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:136:	Perhaps 'outFileScanner' could be replaced by a local variable.
src/codeshine/speech/AudioRecorder.java:136:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:137:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:137:	Private field 'iatros' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:137:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:140:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:140:	Private field 'convert' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:142:	publicMethodCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:144:	Assigning an Object to null is a code smell.  Consider refactoring.
src/codeshine/speech/AudioRecorder.java:149:	Assigning an Object to null is a code smell.  Consider refactoring.
src/codeshine/speech/AudioRecorder.java:155:	Assigning an Object to null is a code smell.  Consider refactoring.
src/codeshine/speech/AudioRecorder.java:157:	An empty statement (semicolon) not part of a loop
src/codeshine/speech/AudioRecorder.java:164:	Assigning an Object to null is a code smell.  Consider refactoring.
src/codeshine/speech/AudioRecorder.java:165:	Assigning an Object to null is a code smell.  Consider refactoring.
src/codeshine/speech/AudioRecorder.java:171:	Assigning an Object to null is a code smell.  Consider refactoring.
src/codeshine/speech/AudioRecorder.java:179:	The String literal "/bin/bash " appears 4 times in this file; the first occurrence is on line 181
src/codeshine/speech/AudioRecorder.java:181:	System.exit() should not be used in J2EE/JEE apps
src/codeshine/speech/AudioRecorder.java:186:	publicMethodCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:188:	System.exit() should not be used in J2EE/JEE apps
src/codeshine/speech/AudioRecorder.java:194:	publicMethodCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:198:	publicMethodCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:200:	Assigning an Object to null is a code smell.  Consider refactoring.
src/codeshine/speech/AudioRecorder.java:202:	Assigning an Object to null is a code smell.  Consider refactoring.
src/codeshine/speech/AudioRecorder.java:203:	Assigning an Object to null is a code smell.  Consider refactoring.
src/codeshine/speech/AudioRecorder.java:206:	publicMethodCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:207:	Avoid variables with short names like ok
src/codeshine/speech/AudioRecorder.java:214:	Local variable 'conv' could be declared final
src/codeshine/speech/AudioRecorder.java:214:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioRecorder.java:215:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:216:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/codeshine/speech/AudioRecorder.java:217:	System.exit() should not be used in J2EE/JEE apps
src/codeshine/speech/AudioRecorder.java:225:	Local variable 'iatrosEnc' could be declared final
src/codeshine/speech/AudioRecorder.java:225:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioRecorder.java:226:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:227:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/codeshine/speech/AudioRecorder.java:228:	System.exit() should not be used in J2EE/JEE apps
src/codeshine/speech/AudioRecorder.java:234:	Avoid empty while statements
src/codeshine/speech/AudioRecorder.java:234:	Avoid using while statements without curly braces
src/codeshine/speech/AudioRecorder.java:239:	Avoid instantiating new objects inside loops
src/codeshine/speech/AudioRecorder.java:242:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/codeshine/speech/AudioRecorder.java:250:	publicMethodCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:256:	Local variable 'iatrosEnc' could be declared final
src/codeshine/speech/AudioRecorder.java:256:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/AudioRecorder.java:257:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:258:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/codeshine/speech/AudioRecorder.java:258:	Avoid empty catch blocks
src/codeshine/speech/AudioRecorder.java:261:	Parameter 'strMessage' is not assigned and could be declared final
src/codeshine/speech/AudioRecorder.java:262:	System.out.println is used
src/codeshine/speech/AudioRecorder.java:265:	Parameter 'src' is not assigned and could be declared final
src/codeshine/speech/AudioRecorder.java:269:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:270:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:271:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:272:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:273:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:274:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:275:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:276:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:277:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:278:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:279:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:280:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:281:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/AudioRecorder.java:287:	headerCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:289:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:289:	Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'm_strName' is not final.
src/codeshine/speech/AudioRecorder.java:289:	Private field 'm_strName' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:291:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:291:	Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'm_encoding' is not final.
src/codeshine/speech/AudioRecorder.java:291:	Private field 'm_encoding' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:294:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:294:	Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'm_nSampleSize' is not final.
src/codeshine/speech/AudioRecorder.java:294:	Private field 'm_nSampleSize' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:296:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:296:	Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'm_bBigEndian' is not final.
src/codeshine/speech/AudioRecorder.java:305:	Avoid unused constructor parameters such as 'bBigEndian'.
src/codeshine/speech/AudioRecorder.java:305:	Parameter 'bBigEndian' is not assigned and could be declared final
src/codeshine/speech/AudioRecorder.java:305:	Parameter 'encoding' is not assigned and could be declared final
src/codeshine/speech/AudioRecorder.java:305:	Parameter 'nSampleSize' is not assigned and could be declared final
src/codeshine/speech/AudioRecorder.java:305:	Parameter 'strName' is not assigned and could be declared final
src/codeshine/speech/AudioRecorder.java:321:	A getX() method which returns a boolean should be named isX()
src/codeshine/speech/AudioRecorder.java:327:	headerCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:328:	Avoid modifiers which are implied by the context
src/codeshine/speech/AudioRecorder.java:328:	publicMethodCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:329:	Avoid modifiers which are implied by the context
src/codeshine/speech/AudioRecorder.java:329:	publicMethodCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:333:	Abstract classes should be named AbstractXXX
src/codeshine/speech/AudioRecorder.java:333:	To be compliant to J2EE, a webapp should not use any thread.
src/codeshine/speech/AudioRecorder.java:333:	headerCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:334:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:334:	Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'm_line' is not final.
src/codeshine/speech/AudioRecorder.java:334:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:335:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:335:	Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'm_targetType' is not final.
src/codeshine/speech/AudioRecorder.java:335:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:336:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:336:	Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'm_file' is not final.
src/codeshine/speech/AudioRecorder.java:336:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:337:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:337:	Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'm_bRecording' is not final.
src/codeshine/speech/AudioRecorder.java:337:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:339:	It is a good practice to call super() in a constructor
src/codeshine/speech/AudioRecorder.java:339:	Parameter 'file' is not assigned and could be declared final
src/codeshine/speech/AudioRecorder.java:339:	Parameter 'line' is not assigned and could be declared final
src/codeshine/speech/AudioRecorder.java:339:	Parameter 'targetType' is not assigned and could be declared final
src/codeshine/speech/AudioRecorder.java:339:	publicMethodCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:345:	Comment is too large: Line too long
src/codeshine/speech/AudioRecorder.java:353:	publicMethodCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:354:	Comment is too large: Line too long
src/codeshine/speech/AudioRecorder.java:364:	headerCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:365:	Avoid excessively long variable names like m_audioInputStream
src/codeshine/speech/AudioRecorder.java:365:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/AudioRecorder.java:365:	Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'm_audioInputStream' is not final.
src/codeshine/speech/AudioRecorder.java:365:	Private field 'm_audioInputStream' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/speech/AudioRecorder.java:365:	fieldCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:367:	Parameter 'file' is not assigned and could be declared final
src/codeshine/speech/AudioRecorder.java:367:	Parameter 'line' is not assigned and could be declared final
src/codeshine/speech/AudioRecorder.java:367:	Parameter 'targetType' is not assigned and could be declared final
src/codeshine/speech/AudioRecorder.java:367:	publicMethodCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:372:	publicMethodCommentRequirement Required
src/codeshine/speech/AudioRecorder.java:376:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/speech/Ejemplo.java:4:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
src/codeshine/speech/Ejemplo.java:4:	headerCommentRequirement Required
src/codeshine/speech/Ejemplo.java:6:	Avoid unnecessary constructors - the compiler will generate these for you
src/codeshine/speech/Ejemplo.java:6:	Document empty constructor
src/codeshine/speech/Ejemplo.java:6:	publicMethodCommentRequirement Required
src/codeshine/speech/Ejemplo.java:10:	Parameter 'args' is not assigned and could be declared final
src/codeshine/speech/Ejemplo.java:10:	publicMethodCommentRequirement Required
src/codeshine/speech/Ejemplo.java:12:	Local variable 'voice' could be declared final
src/codeshine/speech/Ejemplo.java:12:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/Ejemplo.java:13:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/Ejemplo.java:14:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/Ejemplo.java:15:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/Ejemplo.java:16:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/codeshine/speech/Ejemplo.java:17:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/speech/Ejemplo.java:18:	System.exit() should not be used in J2EE/JEE apps
src/codeshine/speech/Foo.java:3:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
src/codeshine/speech/Foo.java:3:	Avoid short class names like Foo
src/codeshine/speech/Foo.java:3:	headerCommentRequirement Required
src/codeshine/speech/Foo.java:5:	Parameter 'args' is not assigned and could be declared final
src/codeshine/speech/Foo.java:5:	publicMethodCommentRequirement Required
src/codeshine/speech/Foo.java:6:	System.out.println is used
src/codeshine/speech/Foo.java:7:	Local variable 'tts' could be declared final
src/codeshine/speech/FreeTTSHelloWorld.java:19:	To be compliant to J2EE, a webapp should not use any thread.
src/codeshine/speech/FreeTTSHelloWorld.java:20:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/FreeTTSHelloWorld.java:20:	To avoid mistakes add a comment at the beginning of the voiceName field if you want a default access modifier
src/codeshine/speech/FreeTTSHelloWorld.java:20:	Use explicit scoping instead of the default package private level
src/codeshine/speech/FreeTTSHelloWorld.java:20:	fieldCommentRequirement Required
src/codeshine/speech/FreeTTSHelloWorld.java:21:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/FreeTTSHelloWorld.java:21:	To avoid mistakes add a comment at the beginning of the helloVoice field if you want a default access modifier
src/codeshine/speech/FreeTTSHelloWorld.java:21:	Use explicit scoping instead of the default package private level
src/codeshine/speech/FreeTTSHelloWorld.java:21:	fieldCommentRequirement Required
src/codeshine/speech/FreeTTSHelloWorld.java:22:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/FreeTTSHelloWorld.java:22:	To avoid mistakes add a comment at the beginning of the voiceManager field if you want a default access modifier
src/codeshine/speech/FreeTTSHelloWorld.java:22:	Use explicit scoping instead of the default package private level
src/codeshine/speech/FreeTTSHelloWorld.java:22:	fieldCommentRequirement Required
src/codeshine/speech/FreeTTSHelloWorld.java:27:	System.out.println is used
src/codeshine/speech/FreeTTSHelloWorld.java:28:	System.out.println is used
src/codeshine/speech/FreeTTSHelloWorld.java:29:	Local variable 'voiceManager' could be declared final
src/codeshine/speech/FreeTTSHelloWorld.java:30:	Local variable 'voices' could be declared final
src/codeshine/speech/FreeTTSHelloWorld.java:30:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/FreeTTSHelloWorld.java:32:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/FreeTTSHelloWorld.java:32:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/FreeTTSHelloWorld.java:32:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/FreeTTSHelloWorld.java:32:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/FreeTTSHelloWorld.java:32:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/FreeTTSHelloWorld.java:32:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/FreeTTSHelloWorld.java:32:	System.out.println is used
src/codeshine/speech/FreeTTSHelloWorld.java:33:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/FreeTTSHelloWorld.java:33:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/FreeTTSHelloWorld.java:36:	publicMethodCommentRequirement Required
src/codeshine/speech/FreeTTSHelloWorld.java:39:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/codeshine/speech/FreeTTSHelloWorld.java:39:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/speech/FreeTTSHelloWorld.java:43:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/FreeTTSHelloWorld.java:43:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/FreeTTSHelloWorld.java:43:	System.out.println is used
src/codeshine/speech/FreeTTSHelloWorld.java:52:	It is a good practice to call super() in a constructor
src/codeshine/speech/FreeTTSHelloWorld.java:52:	publicMethodCommentRequirement Required
src/codeshine/speech/FreeTTSHelloWorld.java:56:	Comment is too large: Line too long
src/codeshine/speech/FreeTTSHelloWorld.java:58:	System.out.println is used
src/codeshine/speech/FreeTTSHelloWorld.java:59:	System.out.println is used
src/codeshine/speech/FreeTTSHelloWorld.java:63:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/codeshine/speech/FreeTTSHelloWorld.java:63:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/speech/FreeTTSHelloWorld.java:64:	System.out.println is used
src/codeshine/speech/FreeTTSHelloWorld.java:67:	System.out.println is used
src/codeshine/speech/FreeTTSHelloWorld.java:71:	publicMethodCommentRequirement Required
src/codeshine/speech/TtsClass.java:9:	Avoid importing anything from the package java.lang
src/codeshine/speech/TtsClass.java:21:	To be compliant to J2EE, a webapp should not use any thread.
src/codeshine/speech/TtsClass.java:21:	headerCommentRequirement Required
src/codeshine/speech/TtsClass.java:22:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/TtsClass.java:22:	To avoid mistakes add a comment at the beginning of the voiceName field if you want a default access modifier
src/codeshine/speech/TtsClass.java:22:	Use explicit scoping instead of the default package private level
src/codeshine/speech/TtsClass.java:22:	fieldCommentRequirement Required
src/codeshine/speech/TtsClass.java:23:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/TtsClass.java:23:	To avoid mistakes add a comment at the beginning of the helloVoice field if you want a default access modifier
src/codeshine/speech/TtsClass.java:23:	Use explicit scoping instead of the default package private level
src/codeshine/speech/TtsClass.java:23:	fieldCommentRequirement Required
src/codeshine/speech/TtsClass.java:24:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/TtsClass.java:24:	To avoid mistakes add a comment at the beginning of the voiceManager field if you want a default access modifier
src/codeshine/speech/TtsClass.java:24:	Use explicit scoping instead of the default package private level
src/codeshine/speech/TtsClass.java:24:	fieldCommentRequirement Required
src/codeshine/speech/TtsClass.java:25:	To avoid mistakes add a comment at the beginning of the text field if you want a default access modifier
src/codeshine/speech/TtsClass.java:25:	Use explicit scoping instead of the default package private level
src/codeshine/speech/TtsClass.java:25:	fieldCommentRequirement Required
src/codeshine/speech/TtsClass.java:26:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/speech/TtsClass.java:26:	To avoid mistakes add a comment at the beginning of the profile field if you want a default access modifier
src/codeshine/speech/TtsClass.java:26:	Use explicit scoping instead of the default package private level
src/codeshine/speech/TtsClass.java:26:	fieldCommentRequirement Required
src/codeshine/speech/TtsClass.java:27:	Avoid using redundant field initializer for 'tag'
src/codeshine/speech/TtsClass.java:27:	To avoid mistakes add a comment at the beginning of the tag field if you want a default access modifier
src/codeshine/speech/TtsClass.java:27:	Use explicit scoping instead of the default package private level
src/codeshine/speech/TtsClass.java:27:	fieldCommentRequirement Required
src/codeshine/speech/TtsClass.java:28:	Avoid using redundant field initializer for 'initPos'
src/codeshine/speech/TtsClass.java:28:	To avoid mistakes add a comment at the beginning of the initPos field if you want a default access modifier
src/codeshine/speech/TtsClass.java:28:	Use explicit scoping instead of the default package private level
src/codeshine/speech/TtsClass.java:28:	fieldCommentRequirement Required
src/codeshine/speech/TtsClass.java:29:	Avoid using redundant field initializer for 'currPos'
src/codeshine/speech/TtsClass.java:29:	To avoid mistakes add a comment at the beginning of the currPos field if you want a default access modifier
src/codeshine/speech/TtsClass.java:29:	Use explicit scoping instead of the default package private level
src/codeshine/speech/TtsClass.java:29:	fieldCommentRequirement Required
src/codeshine/speech/TtsClass.java:30:	Avoid using redundant field initializer for 'token'
src/codeshine/speech/TtsClass.java:30:	To avoid mistakes add a comment at the beginning of the token field if you want a default access modifier
src/codeshine/speech/TtsClass.java:30:	Use explicit scoping instead of the default package private level
src/codeshine/speech/TtsClass.java:30:	fieldCommentRequirement Required
src/codeshine/speech/TtsClass.java:35:	It is a good practice to call super() in a constructor
src/codeshine/speech/TtsClass.java:39:	System.out.println is used
src/codeshine/speech/TtsClass.java:42:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/codeshine/speech/TtsClass.java:42:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/speech/TtsClass.java:43:	System.out.println is used
src/codeshine/speech/TtsClass.java:47:	System.out.println is used
src/codeshine/speech/TtsClass.java:50:	Avoid excessively long variable names like propertyChangeListener
src/codeshine/speech/TtsClass.java:50:	Local variable 'propertyChangeListener' could be declared final
src/codeshine/speech/TtsClass.java:51:	Parameter 'event' is not assigned and could be declared final
src/codeshine/speech/TtsClass.java:51:	publicMethodCommentRequirement Required
src/codeshine/speech/TtsClass.java:52:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:53:	System.out.println is used
src/codeshine/speech/TtsClass.java:54:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/speech/TtsClass.java:54:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:54:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:68:	Avoid unused private methods such as 'listAllVoices()'.
src/codeshine/speech/TtsClass.java:69:	System.out.println is used
src/codeshine/speech/TtsClass.java:70:	System.out.println is used
src/codeshine/speech/TtsClass.java:71:	Local variable 'voices' could be declared final
src/codeshine/speech/TtsClass.java:73:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:73:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:73:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:73:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:73:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:73:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:73:	System.out.println is used
src/codeshine/speech/TtsClass.java:74:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:74:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:77:	Avoid unused private methods such as 'getAllVoices()'.
src/codeshine/speech/TtsClass.java:78:	Local variable 'voiceManager' could be declared final
src/codeshine/speech/TtsClass.java:79:	Local variable 'voices' could be declared final
src/codeshine/speech/TtsClass.java:79:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/TtsClass.java:82:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:82:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:86:	Avoid unused private methods such as 'getText()'.
src/codeshine/speech/TtsClass.java:89:	Parameter 'input' is not assigned and could be declared final
src/codeshine/speech/TtsClass.java:89:	publicMethodCommentRequirement Required
src/codeshine/speech/TtsClass.java:91:	System.out.println is used
src/codeshine/speech/TtsClass.java:95:	publicMethodCommentRequirement Required
src/codeshine/speech/TtsClass.java:98:	publicMethodCommentRequirement Required
src/codeshine/speech/TtsClass.java:101:	Local variable 'work1' could be declared final
src/codeshine/speech/TtsClass.java:101:	To be compliant to J2EE, a webapp should not use any thread.
src/codeshine/speech/TtsClass.java:101:	To be compliant to J2EE, a webapp should not use any thread.
src/codeshine/speech/TtsClass.java:103:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:103:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:103:	System.out.println is used
src/codeshine/speech/TtsClass.java:108:	Parameter 'preproccessor' is not assigned and could be declared final
src/codeshine/speech/TtsClass.java:108:	publicMethodCommentRequirement Required
src/codeshine/speech/TtsClass.java:109:	Avoid if (x != y) ..; else ..;
src/codeshine/speech/TtsClass.java:110:	System.out.println is used
src/codeshine/speech/TtsClass.java:111:	Local variable 'work1' could be declared final
src/codeshine/speech/TtsClass.java:111:	To be compliant to J2EE, a webapp should not use any thread.
src/codeshine/speech/TtsClass.java:111:	To be compliant to J2EE, a webapp should not use any thread.
src/codeshine/speech/TtsClass.java:115:	Avoid using if...else statements without curly braces
src/codeshine/speech/TtsClass.java:117:	Parameter 'profile' is not assigned and could be declared final
src/codeshine/speech/TtsClass.java:117:	publicMethodCommentRequirement Required
src/codeshine/speech/TtsClass.java:120:	publicMethodCommentRequirement Required
src/codeshine/speech/TtsClass.java:121:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:121:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:121:	System.out.println is used
src/codeshine/speech/TtsClass.java:122:	Local variable 'pitchValue' could be declared final
src/codeshine/speech/TtsClass.java:122:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:122:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:123:	System.out.println is used
src/codeshine/speech/TtsClass.java:125:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:126:	System.out.println is used
src/codeshine/speech/TtsClass.java:128:	Parameter 'path' is not assigned and could be declared final
src/codeshine/speech/TtsClass.java:130:	Avoid variables with short names like fd
src/codeshine/speech/TtsClass.java:130:	Local variable 'fd' could be declared final
src/codeshine/speech/TtsClass.java:133:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/speech/TtsClass.java:138:	Parameter 'profile' is not assigned and could be declared final
src/codeshine/speech/TtsClass.java:140:	Local variable 'trie' could be declared final
src/codeshine/speech/TtsClass.java:141:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/TtsClass.java:141:	System.out.println is used
src/codeshine/speech/TtsClass.java:142:	System.out.println is used
src/codeshine/speech/TtsClass.java:143:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:143:	System.out.println is used
src/codeshine/speech/TtsClass.java:144:	Local variable 'result' could be declared final
src/codeshine/speech/TtsClass.java:144:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:146:	System.out.println is used
src/codeshine/speech/TtsClass.java:148:	Parameter 'input' is not assigned and could be declared final
src/codeshine/speech/TtsClass.java:148:	Parameter 'trie' is not assigned and could be declared final
src/codeshine/speech/TtsClass.java:151:	Local variable 'chars' could be declared final
src/codeshine/speech/TtsClass.java:153:	Avoid variables with short names like t
src/codeshine/speech/TtsClass.java:156:	Avoid if (x != y) ..; else ..;
src/codeshine/speech/TtsClass.java:157:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/TtsClass.java:157:	Prefer StringBuffer over += for concatenating strings
src/codeshine/speech/TtsClass.java:158:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/speech/TtsClass.java:158:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/TtsClass.java:159:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/speech/TtsClass.java:159:	System.out.println is used
src/codeshine/speech/TtsClass.java:162:	Prefer StringBuffer over += for concatenating strings
src/codeshine/utils/ITableContentProvider.java:1:	Comment is too large: Too many lines
src/codeshine/utils/ITableContentProvider.java:29:	Comment is too large: Too many lines
src/codeshine/utils/ITableContentProvider.java:37:	Comment is too large: Line too long
src/codeshine/utils/ITableContentProvider.java:44:	Comment is too large: Too many lines
src/codeshine/utils/ITableContentProvider.java:56:	Avoid modifiers which are implied by the context
src/codeshine/utils/StringUtils.java:1:	Comment is too large: Too many lines
src/codeshine/utils/StringUtils.java:25:	Possible God class (WMC=53, ATFD=9, TCC=0.06060606060606061)
src/codeshine/utils/StringUtils.java:40:	Comment is too large: Line too long
src/codeshine/utils/StringUtils.java:42:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
src/codeshine/utils/StringUtils.java:42:	Avoid really long classes.
src/codeshine/utils/StringUtils.java:42:	This class has too many methods, consider refactoring it.
src/codeshine/utils/StringUtils.java:70:	Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'ENTITY_MAPPING' is not final.
src/codeshine/utils/StringUtils.java:70:	The field name indicates a constant but its modifiers do not
src/codeshine/utils/StringUtils.java:70:	Variables should start with a lowercase character, 'ENTITY_MAPPING' starts with uppercase character.
src/codeshine/utils/StringUtils.java:99:	Local variable 'entityKeys' could be declared final
src/codeshine/utils/StringUtils.java:353:	Local variable 'entityValues' could be declared final
src/codeshine/utils/StringUtils.java:609:	Avoid instantiating new objects inside loops
src/codeshine/utils/StringUtils.java:614:	Comment is too large: Too many lines
src/codeshine/utils/StringUtils.java:626:	Parameter 'entity' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:629:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:629:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/StringUtils.java:629:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/StringUtils.java:629:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:629:	Useless parentheses.
src/codeshine/utils/StringUtils.java:631:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
src/codeshine/utils/StringUtils.java:633:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:633:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/StringUtils.java:633:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/StringUtils.java:633:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:633:	Useless parentheses.
src/codeshine/utils/StringUtils.java:636:	Avoid using Literals in Conditional Statements
src/codeshine/utils/StringUtils.java:637:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:637:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:637:	Useless parentheses.
src/codeshine/utils/StringUtils.java:645:	Avoid using Literals in Conditional Statements
src/codeshine/utils/StringUtils.java:646:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:646:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:646:	Useless parentheses.
src/codeshine/utils/StringUtils.java:649:	Avoid using Literals in Conditional Statements
src/codeshine/utils/StringUtils.java:650:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:650:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:650:	Useless parentheses.
src/codeshine/utils/StringUtils.java:652:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:655:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:657:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:657:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:657:	Useless parentheses.
src/codeshine/utils/StringUtils.java:660:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:660:	Useless parentheses.
src/codeshine/utils/StringUtils.java:665:	Comment is too large: Too many lines
src/codeshine/utils/StringUtils.java:677:	Parameter 'text' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:679:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:679:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:679:	Useless parentheses.
src/codeshine/utils/StringUtils.java:683:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:683:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:683:	Useless parentheses.
src/codeshine/utils/StringUtils.java:685:	Avoid excessively long variable names like originalTextLength
src/codeshine/utils/StringUtils.java:685:	Local variable 'originalTextLength' could be declared final
src/codeshine/utils/StringUtils.java:686:	Avoid variables with short names like sb
src/codeshine/utils/StringUtils.java:686:	Local variable 'sb' could be declared final
src/codeshine/utils/StringUtils.java:688:	Local variable 'whereAmp' could be declared final
src/codeshine/utils/StringUtils.java:699:	Local variable 'possEntity' could be declared final
src/codeshine/utils/StringUtils.java:701:	Avoid variables with short names like t
src/codeshine/utils/StringUtils.java:701:	Local variable 't' could be declared final
src/codeshine/utils/StringUtils.java:702:	Avoid if (x != y) ..; else ..;
src/codeshine/utils/StringUtils.java:706:	Local variable 'whereSemi' could be declared final
src/codeshine/utils/StringUtils.java:706:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/StringUtils.java:720:	Comment is too large: Too many lines
src/codeshine/utils/StringUtils.java:730:	Parameter 'text' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:731:	Avoid if (x != y) ..; else ..;
src/codeshine/utils/StringUtils.java:732:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:732:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:732:	Useless parentheses.
src/codeshine/utils/StringUtils.java:734:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:734:	Useless parentheses.
src/codeshine/utils/StringUtils.java:739:	Comment is too large: Too many lines
src/codeshine/utils/StringUtils.java:752:	Avoid reassigning parameters such as 'text'
src/codeshine/utils/StringUtils.java:752:	Avoid reassigning parameters such as 'text'
src/codeshine/utils/StringUtils.java:752:	Avoid reassigning parameters such as 'text'
src/codeshine/utils/StringUtils.java:757:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:757:	Useless parentheses.
src/codeshine/utils/StringUtils.java:761:	Comment is too large: Too many lines
src/codeshine/utils/StringUtils.java:774:	Parameter 'str' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:779:	Comment is too large: Too many lines
src/codeshine/utils/StringUtils.java:790:	Parameter 'str' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:791:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/StringUtils.java:791:	String.trim().length()==0 is an inefficient way to validate an empty String.
src/codeshine/utils/StringUtils.java:791:	Useless parentheses.
src/codeshine/utils/StringUtils.java:795:	Comment is too large: Too many lines
src/codeshine/utils/StringUtils.java:813:	Parameter 'maximumChars' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:813:	Parameter 'str' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:815:	These nested if statements could be combined
src/codeshine/utils/StringUtils.java:816:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:819:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:819:	Useless parentheses.
src/codeshine/utils/StringUtils.java:823:	Comment is too large: Too many lines
src/codeshine/utils/StringUtils.java:839:	Parameter 'delimiter' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:839:	Parameter 'input' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:840:	Avoid if (x != y) ..; else ..;
src/codeshine/utils/StringUtils.java:841:	Local variable 'csvList' could be declared final
src/codeshine/utils/StringUtils.java:848:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:848:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:848:	Useless parentheses.
src/codeshine/utils/StringUtils.java:850:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:850:	Useless parentheses.
src/codeshine/utils/StringUtils.java:855:	Comment is too large: Too many lines
src/codeshine/utils/StringUtils.java:871:	Parameter 'delimiter' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:871:	Parameter 'input' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:872:	Avoid if (x != y) ..; else ..;
src/codeshine/utils/StringUtils.java:873:	Local variable 'csvList' could be declared final
src/codeshine/utils/StringUtils.java:880:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:880:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:880:	Useless parentheses.
src/codeshine/utils/StringUtils.java:882:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:882:	Useless parentheses.
src/codeshine/utils/StringUtils.java:887:	Comment is too large: Too many lines
src/codeshine/utils/StringUtils.java:903:	Parameter 'delimiter' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:903:	Parameter 'input' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:904:	Avoid if (x != y) ..; else ..;
src/codeshine/utils/StringUtils.java:905:	Local variable 'csvList' could be declared final
src/codeshine/utils/StringUtils.java:914:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:914:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:914:	Useless parentheses.
src/codeshine/utils/StringUtils.java:916:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:916:	Useless parentheses.
src/codeshine/utils/StringUtils.java:921:	Comment is too large: Too many lines
src/codeshine/utils/StringUtils.java:938:	Parameter 'delimiter' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:938:	Parameter 'input' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:939:	Local variable 'tokenizer' could be declared final
src/codeshine/utils/StringUtils.java:941:	Local variable 'list' could be declared final
src/codeshine/utils/StringUtils.java:947:	Local variable 'array' could be declared final
src/codeshine/utils/StringUtils.java:952:	Comment is too large: Too many lines
src/codeshine/utils/StringUtils.java:969:	Parameter 'delimiter' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:969:	Parameter 'input' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:970:	Local variable 'tokenizer' could be declared final
src/codeshine/utils/StringUtils.java:973:	Avoid variables with short names like i
src/codeshine/utils/StringUtils.java:978:	Avoid empty catch blocks
src/codeshine/utils/StringUtils.java:981:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:981:	Useless parentheses.
src/codeshine/utils/StringUtils.java:985:	Comment is too large: Too many lines
src/codeshine/utils/StringUtils.java:1001:	Parameter 'delimiter' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:1001:	Parameter 'input' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:1002:	Local variable 'tokenizer' could be declared final
src/codeshine/utils/StringUtils.java:1005:	Avoid variables with short names like i
src/codeshine/utils/StringUtils.java:1008:	Avoid variables with short names like x
src/codeshine/utils/StringUtils.java:1009:	Avoid variables with short names like y
src/codeshine/utils/StringUtils.java:1013:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/StringUtils.java:1016:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/StringUtils.java:1017:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/StringUtils.java:1018:	Avoid empty catch blocks
src/codeshine/utils/StringUtils.java:1020:	Avoid instantiating new objects inside loops
src/codeshine/utils/StringUtils.java:1023:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:1023:	Useless parentheses.
src/codeshine/utils/StringUtils.java:1027:	Comment is too large: Too many lines
src/codeshine/utils/StringUtils.java:1039:	Parameter 'entity' is not assigned and could be declared final
src/codeshine/utils/StringUtils.java:1041:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:1041:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:1041:	Useless parentheses.
src/codeshine/utils/StringUtils.java:1045:	Local variable 'whereSemi' could be declared final
src/codeshine/utils/StringUtils.java:1047:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/StringUtils.java:1047:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:1047:	Useless parentheses.
src/codeshine/utils/StringUtils.java:1055:	This statement may have some unnecessary parentheses
src/codeshine/utils/StringUtils.java:1055:	Useless parentheses.
src/codeshine/utils/TableFieldEditor.java:1:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:4:	Comment is too large: Line too long
src/codeshine/utils/TableFieldEditor.java:24:	Possible God class (WMC=73, ATFD=97, TCC=0.014778325123152709)
src/codeshine/utils/TableFieldEditor.java:63:	Comment is too large: Line too long
src/codeshine/utils/TableFieldEditor.java:65:	The class 'TableFieldEditor' has a Cyclomatic Complexity of 3 (Highest = 29).
src/codeshine/utils/TableFieldEditor.java:65:	The class 'TableFieldEditor' has a Modified Cyclomatic Complexity of 3 (Highest = 21).
src/codeshine/utils/TableFieldEditor.java:65:	The class 'TableFieldEditor' has a Standard Cyclomatic Complexity of 3 (Highest = 21).
src/codeshine/utils/TableFieldEditor.java:73:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/TableFieldEditor.java:76:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/TableFieldEditor.java:79:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/TableFieldEditor.java:79:	Private field 'contentProvider' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/utils/TableFieldEditor.java:86:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/TableFieldEditor.java:86:	Private field 'labelProvider' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/utils/TableFieldEditor.java:97:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/TableFieldEditor.java:97:	Private field 'columnHeaders' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/utils/TableFieldEditor.java:100:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/TableFieldEditor.java:108:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/TableFieldEditor.java:120:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/TableFieldEditor.java:123:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:140:	It is a good practice to call super() in a constructor
src/codeshine/utils/TableFieldEditor.java:140:	Parameter 'labelText' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:140:	Parameter 'name' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:140:	Parameter 'parent' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:141:	Parameter 'contentProvider' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:142:	Parameter 'columnHeaders' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:142:	Parameter 'input' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:142:	Parameter 'labelProvider' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:142:	The user-supplied array 'columnHeaders' is stored directly.
src/codeshine/utils/TableFieldEditor.java:148:	Comment is too large: Line too long
src/codeshine/utils/TableFieldEditor.java:149:	Comment is too large: Line too long
src/codeshine/utils/TableFieldEditor.java:150:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:161:	This statement may have some unnecessary parentheses
src/codeshine/utils/TableFieldEditor.java:161:	Useless parentheses.
src/codeshine/utils/TableFieldEditor.java:165:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:179:	Parameter 'columnIndex' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:184:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:199:	This statement may have some unnecessary parentheses
src/codeshine/utils/TableFieldEditor.java:199:	Useless parentheses.
src/codeshine/utils/TableFieldEditor.java:203:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:222:	Local variable 'selection' could be declared final
src/codeshine/utils/TableFieldEditor.java:224:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:226:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/TableFieldEditor.java:226:	This statement may have some unnecessary parentheses
src/codeshine/utils/TableFieldEditor.java:226:	Useless parentheses.
src/codeshine/utils/TableFieldEditor.java:229:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/TableFieldEditor.java:229:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:229:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:229:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:229:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:229:	This statement may have some unnecessary parentheses
src/codeshine/utils/TableFieldEditor.java:229:	Useless parentheses.
src/codeshine/utils/TableFieldEditor.java:232:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:232:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:232:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:232:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:232:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:232:	This statement may have some unnecessary parentheses
src/codeshine/utils/TableFieldEditor.java:232:	Useless parentheses.
src/codeshine/utils/TableFieldEditor.java:238:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:253:	Parameter 'enabled' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:262:	Assigning an Object to null is a code smell.  Consider refactoring.
src/codeshine/utils/TableFieldEditor.java:263:	Assigning an Object to null is a code smell.  Consider refactoring.
src/codeshine/utils/TableFieldEditor.java:268:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:280:	Useless parentheses.
src/codeshine/utils/TableFieldEditor.java:283:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:299:	Parameter 'ascending' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:299:	Parameter 'columnIndex' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:306:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:320:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/TableFieldEditor.java:320:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:320:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:320:	This statement may have some unnecessary parentheses
src/codeshine/utils/TableFieldEditor.java:320:	Useless parentheses.
src/codeshine/utils/TableFieldEditor.java:322:	Useless parentheses.
src/codeshine/utils/TableFieldEditor.java:327:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:341:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/TableFieldEditor.java:341:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:341:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:341:	This statement may have some unnecessary parentheses
src/codeshine/utils/TableFieldEditor.java:341:	Useless parentheses.
src/codeshine/utils/TableFieldEditor.java:343:	This statement may have some unnecessary parentheses
src/codeshine/utils/TableFieldEditor.java:343:	Useless parentheses.
src/codeshine/utils/TableFieldEditor.java:348:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:361:	Parameter 'columnIndex' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:361:	Parameter 'width' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:363:	Local variable 'column' could be declared final
src/codeshine/utils/TableFieldEditor.java:364:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:369:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:382:	Parameter 'columnIndex' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:384:	Local variable 'column' could be declared final
src/codeshine/utils/TableFieldEditor.java:385:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/TableFieldEditor.java:385:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:385:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:385:	This statement may have some unnecessary parentheses
src/codeshine/utils/TableFieldEditor.java:385:	Useless parentheses.
src/codeshine/utils/TableFieldEditor.java:387:	This statement may have some unnecessary parentheses
src/codeshine/utils/TableFieldEditor.java:387:	Useless parentheses.
src/codeshine/utils/TableFieldEditor.java:392:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:404:	Parameter 'numColumns' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:405:	Avoid variables with short names like gd
src/codeshine/utils/TableFieldEditor.java:405:	Local variable 'gd' could be declared final
src/codeshine/utils/TableFieldEditor.java:411:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:421:	Comment is too large: Line too long
src/codeshine/utils/TableFieldEditor.java:424:	Avoid really long methods.
src/codeshine/utils/TableFieldEditor.java:424:	Parameter 'numColumns' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:424:	Parameter 'parent' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:424:	The method 'doFillIntoGrid' has a Cyclomatic Complexity of 29.
src/codeshine/utils/TableFieldEditor.java:424:	The method 'doFillIntoGrid' has a Modified Cyclomatic Complexity of 21.
src/codeshine/utils/TableFieldEditor.java:424:	The method 'doFillIntoGrid' has a Standard Cyclomatic Complexity of 21.
src/codeshine/utils/TableFieldEditor.java:424:	The method doFillIntoGrid() has an NPath complexity of 48600
src/codeshine/utils/TableFieldEditor.java:432:	Avoid variables with short names like e
src/codeshine/utils/TableFieldEditor.java:432:	Parameter 'e' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:432:	publicMethodCommentRequirement Required
src/codeshine/utils/TableFieldEditor.java:435:	Avoid variables with short names like e
src/codeshine/utils/TableFieldEditor.java:435:	Parameter 'e' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:435:	publicMethodCommentRequirement Required
src/codeshine/utils/TableFieldEditor.java:443:	Avoid variables with short names like gd
src/codeshine/utils/TableFieldEditor.java:443:	Local variable 'gd' could be declared final
src/codeshine/utils/TableFieldEditor.java:459:	Avoid variables with short names like e
src/codeshine/utils/TableFieldEditor.java:459:	Parameter 'e' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:459:	publicMethodCommentRequirement Required
src/codeshine/utils/TableFieldEditor.java:460:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/utils/TableFieldEditor.java:460:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/utils/TableFieldEditor.java:461:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/utils/TableFieldEditor.java:467:	Avoid variables with short names like e
src/codeshine/utils/TableFieldEditor.java:467:	Parameter 'e' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:467:	The method 'widgetDefaultSelected' has a Cyclomatic Complexity of 10.
src/codeshine/utils/TableFieldEditor.java:467:	publicMethodCommentRequirement Required
src/codeshine/utils/TableFieldEditor.java:469:	Local variable 'row' could be declared final
src/codeshine/utils/TableFieldEditor.java:470:	Local variable 'column' could be declared final
src/codeshine/utils/TableFieldEditor.java:471:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/utils/TableFieldEditor.java:472:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:472:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:473:	Avoid using if...else statements without curly braces
src/codeshine/utils/TableFieldEditor.java:475:	Avoid using if...else statements without curly braces
src/codeshine/utils/TableFieldEditor.java:475:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:477:	Avoid variables with short names like e
src/codeshine/utils/TableFieldEditor.java:477:	Parameter 'e' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:477:	publicMethodCommentRequirement Required
src/codeshine/utils/TableFieldEditor.java:481:	Local variable 'row' could be declared final
src/codeshine/utils/TableFieldEditor.java:482:	Local variable 'column' could be declared final
src/codeshine/utils/TableFieldEditor.java:483:	Local variable 'oldText' could be declared final
src/codeshine/utils/TableFieldEditor.java:483:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:484:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:487:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/utils/TableFieldEditor.java:492:	Parameter 'column' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:492:	Parameter 'old' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:492:	Parameter 'row' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:492:	publicMethodCommentRequirement Required
src/codeshine/utils/TableFieldEditor.java:493:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/utils/TableFieldEditor.java:493:	Avoid variables with short names like tl
src/codeshine/utils/TableFieldEditor.java:493:	Local variable 'tl' could be declared final
src/codeshine/utils/TableFieldEditor.java:494:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:494:	Useless parentheses.
src/codeshine/utils/TableFieldEditor.java:494:	Useless parentheses.
src/codeshine/utils/TableFieldEditor.java:495:	Avoid variables with short names like t
src/codeshine/utils/TableFieldEditor.java:495:	Local variable 't' could be declared final
src/codeshine/utils/TableFieldEditor.java:496:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:499:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:499:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:500:	System.out.println is used
src/codeshine/utils/TableFieldEditor.java:501:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:503:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:504:	Avoid variables with short names like t
src/codeshine/utils/TableFieldEditor.java:504:	Local variable 't' could be declared final
src/codeshine/utils/TableFieldEditor.java:505:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:508:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:508:	System.out.println is used
src/codeshine/utils/TableFieldEditor.java:509:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/utils/TableFieldEditor.java:514:	Avoid variables with short names like e
src/codeshine/utils/TableFieldEditor.java:514:	Parameter 'e' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:514:	publicMethodCommentRequirement Required
src/codeshine/utils/TableFieldEditor.java:516:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/utils/TableFieldEditor.java:527:	Avoid variables with short names like e
src/codeshine/utils/TableFieldEditor.java:527:	Parameter 'e' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:527:	publicMethodCommentRequirement Required
src/codeshine/utils/TableFieldEditor.java:538:	Avoid variables with short names like e
src/codeshine/utils/TableFieldEditor.java:538:	Parameter 'e' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:538:	The method 'keyReleased' has a Cyclomatic Complexity of 10.
src/codeshine/utils/TableFieldEditor.java:538:	The method keyReleased() has an NPath complexity of 405
src/codeshine/utils/TableFieldEditor.java:538:	publicMethodCommentRequirement Required
src/codeshine/utils/TableFieldEditor.java:539:	Avoid using if statements without curly braces
src/codeshine/utils/TableFieldEditor.java:541:	Avoid using if statements without curly braces
src/codeshine/utils/TableFieldEditor.java:543:	Avoid using if statements without curly braces
src/codeshine/utils/TableFieldEditor.java:545:	Avoid using if statements without curly braces
src/codeshine/utils/TableFieldEditor.java:548:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/utils/TableFieldEditor.java:548:	Local variable 'selection' could be declared final
src/codeshine/utils/TableFieldEditor.java:549:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/utils/TableFieldEditor.java:549:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/utils/TableFieldEditor.java:549:	Local variable 'row' could be declared final
src/codeshine/utils/TableFieldEditor.java:550:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/utils/TableFieldEditor.java:554:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/utils/TableFieldEditor.java:571:	Local variable 'value' could be declared final
src/codeshine/utils/TableFieldEditor.java:587:	Local variable 'defaultValue' could be declared final
src/codeshine/utils/TableFieldEditor.java:619:	System.out.println is used
src/codeshine/utils/TableFieldEditor.java:623:	Local variable 'selection' could be declared final
src/codeshine/utils/TableFieldEditor.java:628:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:631:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:631:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:633:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:637:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:663:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TableFieldEditor.java:670:	Parameter 'newInput' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:670:	publicMethodCommentRequirement Required
src/codeshine/utils/TableFieldEditor.java:674:	publicMethodCommentRequirement Required
src/codeshine/utils/TableFieldEditor.java:687:	Avoid instantiating new objects inside loops
src/codeshine/utils/TableFieldEditor.java:688:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:688:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:689:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:689:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:694:	Comment is too large: Too many lines
src/codeshine/utils/TableFieldEditor.java:703:	Parameter 'selectionStr' is not assigned and could be declared final
src/codeshine/utils/TableFieldEditor.java:705:	Local variable 'items' could be declared final
src/codeshine/utils/TableFieldEditor.java:710:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:710:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:710:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:710:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:711:	Avoid instantiating new objects inside loops
src/codeshine/utils/TableFieldEditor.java:711:	Local variable 'selection' could be declared final
src/codeshine/utils/TableFieldEditor.java:719:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:719:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:719:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:719:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableFieldEditor.java:721:	Avoid instantiating new objects inside loops
src/codeshine/utils/TableFieldEditor.java:721:	Local variable 'selection' could be declared final
src/codeshine/utils/TableFieldEditor.java:732:	publicMethodCommentRequirement Required
src/codeshine/utils/TableViewerSorter.java:1:	Comment is too large: Too many lines
src/codeshine/utils/TableViewerSorter.java:29:	No need to import a type that lives in the same package
src/codeshine/utils/TableViewerSorter.java:37:	Comment is too large: Line too long
src/codeshine/utils/TableViewerSorter.java:39:	The class 'TableViewerSorter' has a Cyclomatic Complexity of 3 (Highest = 17).
src/codeshine/utils/TableViewerSorter.java:39:	The class 'TableViewerSorter' has a Modified Cyclomatic Complexity of 3 (Highest = 12).
src/codeshine/utils/TableViewerSorter.java:39:	The class 'TableViewerSorter' has a Standard Cyclomatic Complexity of 3 (Highest = 12).
src/codeshine/utils/TableViewerSorter.java:54:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/TableViewerSorter.java:54:	Private field 'viewer' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/utils/TableViewerSorter.java:62:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/TableViewerSorter.java:62:	Private field 'contentProvider' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/utils/TableViewerSorter.java:65:	Comment is too large: Too many lines
src/codeshine/utils/TableViewerSorter.java:74:	It is a good practice to call super() in a constructor
src/codeshine/utils/TableViewerSorter.java:74:	Parameter 'viewer' is not assigned and could be declared final
src/codeshine/utils/TableViewerSorter.java:75:	Parameter 'contentProvider' is not assigned and could be declared final
src/codeshine/utils/TableViewerSorter.java:81:	Comment is too large: Too many lines
src/codeshine/utils/TableViewerSorter.java:91:	This statement may have some unnecessary parentheses
src/codeshine/utils/TableViewerSorter.java:91:	Useless parentheses.
src/codeshine/utils/TableViewerSorter.java:95:	Comment is too large: Too many lines
src/codeshine/utils/TableViewerSorter.java:104:	Parameter 'columnIndex' is not assigned and could be declared final
src/codeshine/utils/TableViewerSorter.java:109:	Comment is too large: Too many lines
src/codeshine/utils/TableViewerSorter.java:121:	This statement may have some unnecessary parentheses
src/codeshine/utils/TableViewerSorter.java:121:	Useless parentheses.
src/codeshine/utils/TableViewerSorter.java:125:	Comment is too large: Too many lines
src/codeshine/utils/TableViewerSorter.java:136:	Parameter 'ascending' is not assigned and could be declared final
src/codeshine/utils/TableViewerSorter.java:152:	Comment is too large: Too many lines
src/codeshine/utils/TableViewerSorter.java:167:	Avoid variables with short names like e1
src/codeshine/utils/TableViewerSorter.java:167:	Avoid variables with short names like e2
src/codeshine/utils/TableViewerSorter.java:167:	Parameter 'e1' is not assigned and could be declared final
src/codeshine/utils/TableViewerSorter.java:167:	Parameter 'e2' is not assigned and could be declared final
src/codeshine/utils/TableViewerSorter.java:167:	Parameter 'viewer' is not assigned and could be declared final
src/codeshine/utils/TableViewerSorter.java:167:	The method 'compare' has a Cyclomatic Complexity of 17.
src/codeshine/utils/TableViewerSorter.java:167:	The method 'compare' has a Modified Cyclomatic Complexity of 12.
src/codeshine/utils/TableViewerSorter.java:167:	The method 'compare' has a Standard Cyclomatic Complexity of 12.
src/codeshine/utils/TableViewerSorter.java:169:	Local variable 'category1' could be declared final
src/codeshine/utils/TableViewerSorter.java:170:	Local variable 'category2' could be declared final
src/codeshine/utils/TableViewerSorter.java:172:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/TableViewerSorter.java:172:	Useless parentheses.
src/codeshine/utils/TableViewerSorter.java:195:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/TableViewerSorter.java:195:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:195:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:195:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:195:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:195:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:197:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:197:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:197:	Useless parentheses.
src/codeshine/utils/TableViewerSorter.java:201:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/TableViewerSorter.java:201:	This statement may have some unnecessary parentheses
src/codeshine/utils/TableViewerSorter.java:201:	Useless parentheses.
src/codeshine/utils/TableViewerSorter.java:206:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/TableViewerSorter.java:206:	Useless parentheses.
src/codeshine/utils/TableViewerSorter.java:211:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/TableViewerSorter.java:211:	This statement may have some unnecessary parentheses
src/codeshine/utils/TableViewerSorter.java:211:	Useless parentheses.
src/codeshine/utils/TableViewerSorter.java:216:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/utils/TableViewerSorter.java:216:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:216:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:216:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:217:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:218:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:222:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:222:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:222:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:222:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:222:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:224:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:224:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorter.java:224:	Useless parentheses.
src/codeshine/utils/TableViewerSorterHandler.java:1:	Comment is too large: Too many lines
src/codeshine/utils/TableViewerSorterHandler.java:35:	No need to import a type that lives in the same package
src/codeshine/utils/TableViewerSorterHandler.java:44:	Comment is too large: Line too long
src/codeshine/utils/TableViewerSorterHandler.java:54:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/TableViewerSorterHandler.java:54:	Private field 'table' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/utils/TableViewerSorterHandler.java:61:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/TableViewerSorterHandler.java:61:	Private field 'sorter' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/utils/TableViewerSorterHandler.java:64:	Comment is too large: Too many lines
src/codeshine/utils/TableViewerSorterHandler.java:76:	It is a good practice to call super() in a constructor
src/codeshine/utils/TableViewerSorterHandler.java:76:	Parameter 'sorter' is not assigned and could be declared final
src/codeshine/utils/TableViewerSorterHandler.java:76:	Parameter 'table' is not assigned and could be declared final
src/codeshine/utils/TableViewerSorterHandler.java:91:	Comment is too large: Too many lines
src/codeshine/utils/TableViewerSorterHandler.java:102:	Parameter 'event' is not assigned and could be declared final
src/codeshine/utils/TableViewerSorterHandler.java:103:	Local variable 'columnIndex' could be declared final
src/codeshine/utils/TableViewerSorterHandler.java:116:	Parameter 'columnIndex' is not assigned and could be declared final
src/codeshine/utils/TableViewerSorterHandler.java:121:	Comment is too large: Too many lines
src/codeshine/utils/TableViewerSorterHandler.java:130:	Parameter 'ascending' is not assigned and could be declared final
src/codeshine/utils/TableViewerSorterHandler.java:130:	Parameter 'columnIndex' is not assigned and could be declared final
src/codeshine/utils/TableViewerSorterHandler.java:135:	Local variable 'column' could be declared final
src/codeshine/utils/TableViewerSorterHandler.java:150:	Local variable 'columns' could be declared final
src/codeshine/utils/TableViewerSorterHandler.java:152:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorterHandler.java:152:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorterHandler.java:164:	Local variable 'columns' could be declared final
src/codeshine/utils/TableViewerSorterHandler.java:166:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TableViewerSorterHandler.java:166:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TestTrie.java:4:	Avoid unused imports such as 'codeshine.speech.TtsClass'
src/codeshine/utils/TestTrie.java:6:	All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
src/codeshine/utils/TestTrie.java:6:	headerCommentRequirement Required
src/codeshine/utils/TestTrie.java:11:	Avoid using redundant field initializer for 'tag'
src/codeshine/utils/TestTrie.java:11:	To avoid mistakes add a comment at the beginning of the tag field if you want a default access modifier
src/codeshine/utils/TestTrie.java:11:	Use explicit scoping instead of the default package private level
src/codeshine/utils/TestTrie.java:12:	Avoid using redundant field initializer for 'initPos'
src/codeshine/utils/TestTrie.java:12:	To avoid mistakes add a comment at the beginning of the initPos field if you want a default access modifier
src/codeshine/utils/TestTrie.java:12:	Use explicit scoping instead of the default package private level
src/codeshine/utils/TestTrie.java:12:	fieldCommentRequirement Required
src/codeshine/utils/TestTrie.java:13:	Avoid using redundant field initializer for 'currPos'
src/codeshine/utils/TestTrie.java:13:	To avoid mistakes add a comment at the beginning of the currPos field if you want a default access modifier
src/codeshine/utils/TestTrie.java:13:	Use explicit scoping instead of the default package private level
src/codeshine/utils/TestTrie.java:13:	fieldCommentRequirement Required
src/codeshine/utils/TestTrie.java:14:	Avoid using redundant field initializer for 'token'
src/codeshine/utils/TestTrie.java:14:	To avoid mistakes add a comment at the beginning of the token field if you want a default access modifier
src/codeshine/utils/TestTrie.java:14:	Use explicit scoping instead of the default package private level
src/codeshine/utils/TestTrie.java:14:	fieldCommentRequirement Required
src/codeshine/utils/TestTrie.java:15:	Parameter 'args' is not assigned and could be declared final
src/codeshine/utils/TestTrie.java:15:	publicMethodCommentRequirement Required
src/codeshine/utils/TestTrie.java:17:	Avoid variables with short names like t
src/codeshine/utils/TestTrie.java:17:	Local variable 't' could be declared final
src/codeshine/utils/TestTrie.java:23:	System.out.println is used
src/codeshine/utils/TestTrie.java:25:	Local variable 'prueba2' could be declared final
src/codeshine/utils/TestTrie.java:26:	System.out.println is used
src/codeshine/utils/TestTrie.java:27:	System.out.println is used
src/codeshine/utils/TestTrie.java:33:	Parameter 'input' is not assigned and could be declared final
src/codeshine/utils/TestTrie.java:33:	Parameter 'trie' is not assigned and could be declared final
src/codeshine/utils/TestTrie.java:33:	publicMethodCommentRequirement Required
src/codeshine/utils/TestTrie.java:36:	Local variable 'chars' could be declared final
src/codeshine/utils/TestTrie.java:37:	Avoid variables with short names like t
src/codeshine/utils/TestTrie.java:40:	Avoid if (x != y) ..; else ..;
src/codeshine/utils/TestTrie.java:41:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TestTrie.java:41:	Prefer StringBuffer over += for concatenating strings
src/codeshine/utils/TestTrie.java:42:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TestTrie.java:42:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TestTrie.java:43:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TestTrie.java:43:	System.out.println is used
src/codeshine/utils/TestTrie.java:46:	Prefer StringBuffer over += for concatenating strings
src/codeshine/utils/Token.java:3:	headerCommentRequirement Required
src/codeshine/utils/Token.java:4:	fieldCommentRequirement Required
src/codeshine/utils/Token.java:5:	fieldCommentRequirement Required
src/codeshine/utils/Token.java:6:	fieldCommentRequirement Required
src/codeshine/utils/Token.java:9:	publicMethodCommentRequirement Required
src/codeshine/utils/Token.java:14:	Parameter 'info' is not assigned and could be declared final
src/codeshine/utils/Token.java:14:	Parameter 'replacement' is not assigned and could be declared final
src/codeshine/utils/Token.java:14:	Parameter 'value' is not assigned and could be declared final
src/codeshine/utils/Token.java:14:	publicMethodCommentRequirement Required
src/codeshine/utils/Token.java:19:	publicMethodCommentRequirement Required
src/codeshine/utils/Token.java:22:	publicMethodCommentRequirement Required
src/codeshine/utils/Token.java:25:	publicMethodCommentRequirement Required
src/codeshine/utils/Token.java:28:	publicMethodCommentRequirement Required
src/codeshine/utils/Token.java:31:	Parameter 'value' is not assigned and could be declared final
src/codeshine/utils/Token.java:31:	publicMethodCommentRequirement Required
src/codeshine/utils/Token.java:34:	Parameter 'info' is not assigned and could be declared final
src/codeshine/utils/Token.java:34:	publicMethodCommentRequirement Required
src/codeshine/utils/Token.java:37:	Parameter 'replacement' is not assigned and could be declared final
src/codeshine/utils/Token.java:37:	publicMethodCommentRequirement Required
src/codeshine/utils/Token.java:40:	Parameter 'token' is not assigned and could be declared final
src/codeshine/utils/Token.java:40:	The method name and parameter number are suspiciously close to equals(Object)
src/codeshine/utils/Token.java:40:	publicMethodCommentRequirement Required
src/codeshine/utils/Token.java:41:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/Token.java:41:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/Token.java:41:	This statement may have some unnecessary parentheses
src/codeshine/utils/Token.java:41:	Useless parentheses.
src/codeshine/utils/TokenList.java:2:	Avoid duplicate imports such as 'java.util.HashSet'
src/codeshine/utils/TokenList.java:2:	Avoid unused imports such as 'java.util.HashSet'
src/codeshine/utils/TokenList.java:9:	Avoid unused imports such as 'javax.xml.parsers.ParserConfigurationException'
src/codeshine/utils/TokenList.java:13:	Avoid unused imports such as 'org.eclipse.jface.viewers.Viewer'
src/codeshine/utils/TokenList.java:17:	headerCommentRequirement Required
src/codeshine/utils/TokenList.java:19:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/TokenList.java:19:	To avoid mistakes add a comment at the beginning of the configData field if you want a default access modifier
src/codeshine/utils/TokenList.java:19:	Use explicit scoping instead of the default package private level
src/codeshine/utils/TokenList.java:19:	fieldCommentRequirement Required
src/codeshine/utils/TokenList.java:24:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/TokenList.java:24:	To avoid mistakes add a comment at the beginning of the list field if you want a default access modifier
src/codeshine/utils/TokenList.java:24:	Use explicit scoping instead of the default package private level
src/codeshine/utils/TokenList.java:24:	fieldCommentRequirement Required
src/codeshine/utils/TokenList.java:25:	Avoid using implementation types like 'Hashtable'; use the interface instead
src/codeshine/utils/TokenList.java:25:	Consider replacing this Hashtable with the newer java.util.Map
src/codeshine/utils/TokenList.java:25:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/TokenList.java:25:	To avoid mistakes add a comment at the beginning of the table field if you want a default access modifier
src/codeshine/utils/TokenList.java:25:	Use explicit scoping instead of the default package private level
src/codeshine/utils/TokenList.java:25:	fieldCommentRequirement Required
src/codeshine/utils/TokenList.java:27:	Parameter 'argv' is not assigned and could be declared final
src/codeshine/utils/TokenList.java:27:	publicMethodCommentRequirement Required
src/codeshine/utils/TokenList.java:28:	Avoid variables with short names like tl
src/codeshine/utils/TokenList.java:31:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/utils/TokenList.java:32:	Local variable 'tl2' could be declared final
src/codeshine/utils/TokenList.java:33:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TokenList.java:34:	Avoid using if...else statements without curly braces
src/codeshine/utils/TokenList.java:34:	System.out.println is used
src/codeshine/utils/TokenList.java:36:	Avoid using if...else statements without curly braces
src/codeshine/utils/TokenList.java:36:	System.out.println is used
src/codeshine/utils/TokenList.java:38:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TokenList.java:38:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TokenList.java:38:	System.out.println is used
src/codeshine/utils/TokenList.java:42:	It is a good practice to call super() in a constructor
src/codeshine/utils/TokenList.java:42:	publicMethodCommentRequirement Required
src/codeshine/utils/TokenList.java:46:	Avoid instantiating new objects inside loops
src/codeshine/utils/TokenList.java:46:	Avoid variables with short names like t
src/codeshine/utils/TokenList.java:46:	Local variable 't' could be declared final
src/codeshine/utils/TokenList.java:58:	It is a good practice to call super() in a constructor
src/codeshine/utils/TokenList.java:58:	Parameter 'fInput' is not assigned and could be declared final
src/codeshine/utils/TokenList.java:59:	Local variable 'handler' could be declared final
src/codeshine/utils/TokenList.java:61:	Local variable 'factory' could be declared final
src/codeshine/utils/TokenList.java:65:	Local variable 'saxParser' could be declared final
src/codeshine/utils/TokenList.java:68:	A catch statement should never catch throwable since it includes errors.
src/codeshine/utils/TokenList.java:68:	Avoid empty catch blocks
src/codeshine/utils/TokenList.java:71:	Parameter 'configFile' is not assigned and could be declared final
src/codeshine/utils/TokenList.java:71:	publicMethodCommentRequirement Required
src/codeshine/utils/TokenList.java:75:	publicMethodCommentRequirement Required
src/codeshine/utils/TokenList.java:82:	Avoid variables with short names like t
src/codeshine/utils/TokenList.java:82:	Parameter 't' is not assigned and could be declared final
src/codeshine/utils/TokenList.java:82:	publicMethodCommentRequirement Required
src/codeshine/utils/TokenList.java:83:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TokenList.java:83:	System.out.println is used
src/codeshine/utils/TokenList.java:85:	System.out.println is used
src/codeshine/utils/TokenList.java:91:	System.out.println is used
src/codeshine/utils/TokenList.java:94:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TokenList.java:94:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TokenList.java:94:	System.out.println is used
src/codeshine/utils/TokenList.java:96:	Parameter 'key' is not assigned and could be declared final
src/codeshine/utils/TokenList.java:96:	publicMethodCommentRequirement Required
src/codeshine/utils/TokenList.java:97:	Avoid using if statements without curly braces
src/codeshine/utils/TokenList.java:100:	publicMethodCommentRequirement Required
src/codeshine/utils/TokenList.java:106:	Local variable 'elems' could be declared final
src/codeshine/utils/TokenList.java:107:	Avoid using while statements without curly braces
src/codeshine/utils/TokenList.java:107:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TokenList.java:108:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TokenList.java:108:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TokenList.java:108:	Prefer StringBuffer over += for concatenating strings
src/codeshine/utils/TokenList.java:111:	publicMethodCommentRequirement Required
src/codeshine/utils/TokenList.java:115:	Parameter 'filepath' is not assigned and could be declared final
src/codeshine/utils/TokenList.java:115:	publicMethodCommentRequirement Required
src/codeshine/utils/TokenList.java:120:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/utils/TokenList.java:124:	publicMethodCommentRequirement Required
src/codeshine/utils/TokenList.java:125:	Local variable 'ret' could be declared final
src/codeshine/utils/TokenList.java:127:	Local variable 'elems' could be declared final
src/codeshine/utils/TokenList.java:128:	Avoid using while statements without curly braces
src/codeshine/utils/TokenList.java:128:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TokenList.java:129:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TokenList.java:135:	publicMethodCommentRequirement Required
src/codeshine/utils/TokenList.java:138:	Avoid using implementation types like 'Hashtable'; use the interface instead
src/codeshine/utils/TokenList.java:138:	Consider replacing this Hashtable with the newer java.util.Map
src/codeshine/utils/TokenList.java:138:	publicMethodCommentRequirement Required
src/codeshine/utils/TokenList.java:141:	Ensure you override both equals() and hashCode()
src/codeshine/utils/TokenList.java:141:	Parameter 'obj' is not assigned and could be declared final
src/codeshine/utils/TokenList.java:141:	publicMethodCommentRequirement Required
src/codeshine/utils/TokenList.java:144:	Avoid using if statements without curly braces
src/codeshine/utils/TokenList.java:144:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TokenList.java:146:	Consider replacing this Hashtable with the newer java.util.Map
src/codeshine/utils/TokenList.java:146:	Consider replacing this Hashtable with the newer java.util.Map
src/codeshine/utils/TokenList.java:146:	Local variable 'enumCmp' could be declared final
src/codeshine/utils/TokenList.java:146:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TokenList.java:147:	Local variable 'keys' could be declared final
src/codeshine/utils/TokenList.java:148:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TokenList.java:149:	Local variable 'key' could be declared final
src/codeshine/utils/TokenList.java:149:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TokenList.java:150:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TokenList.java:150:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TokenList.java:150:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/TokenList.java:150:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TokenList.java:150:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TokensLabelProvider.java:7:	Avoid unused imports such as 'codeshine.Activator'
src/codeshine/utils/TokensLabelProvider.java:8:	No need to import a type that lives in the same package
src/codeshine/utils/TokensLabelProvider.java:10:	headerCommentRequirement Required
src/codeshine/utils/TokensLabelProvider.java:13:	Avoid unnecessary constructors - the compiler will generate these for you
src/codeshine/utils/TokensLabelProvider.java:13:	It is a good practice to call super() in a constructor
src/codeshine/utils/TokensLabelProvider.java:13:	publicMethodCommentRequirement Required
src/codeshine/utils/TokensLabelProvider.java:17:	Parameter 'columnIndex' is not assigned and could be declared final
src/codeshine/utils/TokensLabelProvider.java:17:	Parameter 'element' is not assigned and could be declared final
src/codeshine/utils/TokensLabelProvider.java:17:	publicMethodCommentRequirement Required
src/codeshine/utils/TokensLabelProvider.java:24:	Parameter 'columnIndex' is not assigned and could be declared final
src/codeshine/utils/TokensLabelProvider.java:24:	Parameter 'element' is not assigned and could be declared final
src/codeshine/utils/TokensLabelProvider.java:24:	publicMethodCommentRequirement Required
src/codeshine/utils/TokensLabelProvider.java:25:	Avoid variables with short names like t
src/codeshine/utils/TokensLabelProvider.java:29:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/utils/TokensLabelProvider.java:30:	Switch statements should have a default label
src/codeshine/utils/TokensLabelProvider.java:32:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TokensLabelProvider.java:36:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/TokensLabelProvider.java:40:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/Trie.java:7:	Avoid short class names like Trie
src/codeshine/utils/Trie.java:7:	headerCommentRequirement Required
src/codeshine/utils/Trie.java:12:	To avoid mistakes add a comment at the beginning of the root field if you want a default access modifier
src/codeshine/utils/Trie.java:12:	Use explicit scoping instead of the default package private level
src/codeshine/utils/Trie.java:13:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/Trie.java:13:	To avoid mistakes add a comment at the beginning of the data field if you want a default access modifier
src/codeshine/utils/Trie.java:13:	Use explicit scoping instead of the default package private level
src/codeshine/utils/Trie.java:13:	fieldCommentRequirement Required
src/codeshine/utils/Trie.java:14:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/Trie.java:14:	To avoid mistakes add a comment at the beginning of the childrens field if you want a default access modifier
src/codeshine/utils/Trie.java:14:	Use explicit scoping instead of the default package private level
src/codeshine/utils/Trie.java:14:	fieldCommentRequirement Required
src/codeshine/utils/Trie.java:16:	Parameter 'args' is not assigned and could be declared final
src/codeshine/utils/Trie.java:16:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:17:	Avoid variables with short names like t
src/codeshine/utils/Trie.java:17:	Local variable 't' could be declared final
src/codeshine/utils/Trie.java:23:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:26:	Parameter 'root' is not assigned and could be declared final
src/codeshine/utils/Trie.java:28:	Assigning an Object to null is a code smell.  Consider refactoring.
src/codeshine/utils/Trie.java:31:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:34:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:37:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:40:	Parameter 'root' is not assigned and could be declared final
src/codeshine/utils/Trie.java:40:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:43:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:44:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
src/codeshine/utils/Trie.java:44:	Useless parentheses.
src/codeshine/utils/Trie.java:46:	Parameter 'child' is not assigned and could be declared final
src/codeshine/utils/Trie.java:46:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:50:	Parameter 'index' is not assigned and could be declared final
src/codeshine/utils/Trie.java:50:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:53:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:56:	Parameter 'child' is not assigned and could be declared final
src/codeshine/utils/Trie.java:56:	Parameter 'index' is not assigned and could be declared final
src/codeshine/utils/Trie.java:56:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:59:	Parameter 'chars' is not assigned and could be declared final
src/codeshine/utils/Trie.java:59:	Parameter 'pos' is not assigned and could be declared final
src/codeshine/utils/Trie.java:59:	Parameter 'token' is not assigned and could be declared final
src/codeshine/utils/Trie.java:59:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:69:	Local variable 'firstChar' could be declared final
src/codeshine/utils/Trie.java:70:	Avoid variables with short names like it
src/codeshine/utils/Trie.java:70:	Local variable 'it' could be declared final
src/codeshine/utils/Trie.java:72:	Local variable 'child' could be declared final
src/codeshine/utils/Trie.java:73:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/Trie.java:79:	Local variable 'child' could be declared final
src/codeshine/utils/Trie.java:88:	Parameter 'token' is not assigned and could be declared final
src/codeshine/utils/Trie.java:88:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:89:	Local variable 'pos' could be declared final
src/codeshine/utils/Trie.java:90:	Local variable 'chars' could be declared final
src/codeshine/utils/Trie.java:90:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/Trie.java:90:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/Trie.java:91:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/Trie.java:91:	This statement may have some unnecessary parentheses
src/codeshine/utils/Trie.java:91:	Useless parentheses.
src/codeshine/utils/Trie.java:94:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:95:	Useless parentheses.
src/codeshine/utils/Trie.java:97:	Parameter 'item' is not assigned and could be declared final
src/codeshine/utils/Trie.java:97:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:101:	Avoid variables with short names like it
src/codeshine/utils/Trie.java:101:	Local variable 'it' could be declared final
src/codeshine/utils/Trie.java:104:	Local variable 'child' could be declared final
src/codeshine/utils/Trie.java:105:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/Trie.java:105:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/Trie.java:109:	Avoid using if statements without curly braces
src/codeshine/utils/Trie.java:114:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:115:	Avoid using equals() to compare against null
src/codeshine/utils/Trie.java:115:	This statement may have some unnecessary parentheses
src/codeshine/utils/Trie.java:115:	Useless parentheses.
src/codeshine/utils/Trie.java:117:	Parameter 'pos' is not assigned and could be declared final
src/codeshine/utils/Trie.java:117:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:118:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/Trie.java:118:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/Trie.java:120:	Parameter 'indent' is not assigned and could be declared final
src/codeshine/utils/Trie.java:120:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:123:	Prefer StringBuffer over += for concatenating strings
src/codeshine/utils/Trie.java:124:	Avoid using if statements without curly braces
src/codeshine/utils/Trie.java:125:	Prefer StringBuffer over += for concatenating strings
src/codeshine/utils/Trie.java:126:	Prefer StringBuffer over += for concatenating strings
src/codeshine/utils/Trie.java:127:	Avoid catching NullPointerException; consider removing the cause of the NPE.
src/codeshine/utils/Trie.java:127:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/codeshine/utils/Trie.java:128:	Prefer StringBuffer over += for concatenating strings
src/codeshine/utils/Trie.java:130:	Avoid variables with short names like it
src/codeshine/utils/Trie.java:130:	Local variable 'it' could be declared final
src/codeshine/utils/Trie.java:132:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/Trie.java:132:	Prefer StringBuffer over += for concatenating strings
src/codeshine/utils/Trie.java:138:	Parameter 'current' is not assigned and could be declared final
src/codeshine/utils/Trie.java:138:	Parameter 'input' is not assigned and could be declared final
src/codeshine/utils/Trie.java:138:	publicMethodCommentRequirement Required
src/codeshine/utils/Trie.java:144:	Avoid variables with short names like it
src/codeshine/utils/Trie.java:144:	Local variable 'it' could be declared final
src/codeshine/utils/Trie.java:145:	Useless parentheses.
src/codeshine/utils/Trie.java:146:	Avoid instantiating new objects inside loops
src/codeshine/utils/Trie.java:146:	Avoid variables with short names like ch
src/codeshine/utils/Trie.java:146:	Local variable 'ch' could be declared final
src/codeshine/utils/Trie.java:147:	Local variable 'child' could be declared final
src/codeshine/utils/Trie.java:148:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/Trie.java:148:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/Trie.java:149:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/XMLHandler.java:9:	Avoid unused imports such as 'javax.xml.parsers.ParserConfigurationException'
src/codeshine/utils/XMLHandler.java:10:	Avoid unused imports such as 'javax.xml.parsers.SAXParser'
src/codeshine/utils/XMLHandler.java:11:	No need to import a type that lives in the same package
src/codeshine/utils/XMLHandler.java:14:	headerCommentRequirement Required
src/codeshine/utils/XMLHandler.java:16:	fieldCommentRequirement Required
src/codeshine/utils/XMLHandler.java:17:	To avoid mistakes add a comment at the beginning of the factory field if you want a default access modifier
src/codeshine/utils/XMLHandler.java:17:	Use explicit scoping instead of the default package private level
src/codeshine/utils/XMLHandler.java:17:	fieldCommentRequirement Required
src/codeshine/utils/XMLHandler.java:18:	Avoid variables with short names like tl
src/codeshine/utils/XMLHandler.java:18:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/XMLHandler.java:18:	Private field 'tl' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/utils/XMLHandler.java:18:	fieldCommentRequirement Required
src/codeshine/utils/XMLHandler.java:20:	Avoid variables with short names like tl
src/codeshine/utils/XMLHandler.java:20:	It is a good practice to call super() in a constructor
src/codeshine/utils/XMLHandler.java:20:	Parameter 'tl' is not assigned and could be declared final
src/codeshine/utils/XMLHandler.java:20:	publicMethodCommentRequirement Required
src/codeshine/utils/XMLHandler.java:25:	publicMethodCommentRequirement Required
src/codeshine/utils/XMLHandler.java:27:	Document empty method body
src/codeshine/utils/XMLHandler.java:31:	publicMethodCommentRequirement Required
src/codeshine/utils/XMLHandler.java:33:	Document empty method body
src/codeshine/utils/XMLHandler.java:37:	Parameter 'namespaceURI' is not assigned and could be declared final
src/codeshine/utils/XMLHandler.java:37:	publicMethodCommentRequirement Required
src/codeshine/utils/XMLHandler.java:38:	Parameter 'lName' is not assigned and could be declared final
src/codeshine/utils/XMLHandler.java:39:	Parameter 'qName' is not assigned and could be declared final
src/codeshine/utils/XMLHandler.java:40:	Parameter 'attrs' is not assigned and could be declared final
src/codeshine/utils/XMLHandler.java:48:	Avoid variables with short names like t
src/codeshine/utils/XMLHandler.java:48:	Local variable 't' could be declared final
src/codeshine/utils/XMLHandler.java:49:	Avoid using if statements without curly braces
src/codeshine/utils/XMLHandler.java:55:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/XMLHandler.java:56:	Avoid using if...else statements without curly braces
src/codeshine/utils/XMLHandler.java:57:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/XMLHandler.java:58:	Avoid using if...else statements without curly braces
src/codeshine/utils/XMLHandler.java:59:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/utils/XMLHandler.java:60:	Avoid using if...else statements without curly braces
src/codeshine/utils/XMLHandler.java:62:	Avoid using if...else statements without curly braces
src/codeshine/utils/XMLHandler.java:62:	System.out.println is used
src/codeshine/utils/XMLHandler.java:63:	Avoid using if statements without curly braces
src/codeshine/utils/XMLHandler.java:73:	Parameter 'namespaceURI' is not assigned and could be declared final
src/codeshine/utils/XMLHandler.java:73:	publicMethodCommentRequirement Required
src/codeshine/utils/XMLHandler.java:74:	Parameter 'sName' is not assigned and could be declared final
src/codeshine/utils/XMLHandler.java:75:	Parameter 'qName' is not assigned and could be declared final
src/codeshine/utils/XMLHandler.java:78:	Document empty method body
src/codeshine/utils/XMLHandler.java:82:	Parameter 'buf' is not assigned and could be declared final
src/codeshine/utils/XMLHandler.java:82:	Parameter 'len' is not assigned and could be declared final
src/codeshine/utils/XMLHandler.java:82:	Parameter 'offset' is not assigned and could be declared final
src/codeshine/utils/XMLHandler.java:82:	publicMethodCommentRequirement Required
src/codeshine/utils/XMLHandler.java:84:	Document empty method body
src/codeshine/utils/XMLHandler.java:94:	Avoid unused private methods such as 'emit(String)'.
src/codeshine/utils/XMLHandler.java:94:	Avoid variables with short names like s
src/codeshine/utils/XMLHandler.java:94:	Parameter 's' is not assigned and could be declared final
src/codeshine/utils/XMLHandler.java:106:	Avoid unused private methods such as 'nl()'.
src/codeshine/utils/XMLHandler.java:106:	Avoid using short method names
src/codeshine/utils/XMLHandler.java:108:	Document empty method body
src/codeshine/utils/XMLWriter.java:3:	Avoid unused imports such as 'org.xml.sax.helpers.DefaultHandler'
src/codeshine/utils/XMLWriter.java:5:	Avoid unused imports such as 'java.util.Iterator'
src/codeshine/utils/XMLWriter.java:9:	headerCommentRequirement Required
src/codeshine/utils/XMLWriter.java:11:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/XMLWriter.java:11:	fieldCommentRequirement Required
src/codeshine/utils/XMLWriter.java:12:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/utils/XMLWriter.java:12:	Private field 'elements' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/utils/XMLWriter.java:12:	fieldCommentRequirement Required
src/codeshine/utils/XMLWriter.java:15:	Parameter 'content' is not assigned and could be declared final
src/codeshine/utils/XMLWriter.java:15:	Parameter 'filePath' is not assigned and could be declared final
src/codeshine/utils/XMLWriter.java:15:	publicMethodCommentRequirement Required
src/codeshine/utils/XMLWriter.java:19:	This statement may have some unnecessary parentheses
src/codeshine/utils/XMLWriter.java:19:	Useless parentheses.
src/codeshine/utils/XMLWriter.java:22:	publicMethodCommentRequirement Required
src/codeshine/utils/XMLWriter.java:25:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/utils/XMLWriter.java:27:	Avoid variables with short names like t
src/codeshine/utils/XMLWriter.java:30:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/utils/XMLWriter.java:33:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/XMLWriter.java:34:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/XMLWriter.java:35:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/utils/XMLWriter.java:38:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/utils/XMLWriter.java:43:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/utils/XMLWriter.java:60:	New exception is thrown in catch block, original stack trace may be lost
src/codeshine/utils/XMLWriter.java:64:	Avoid variables with short names like s
src/codeshine/utils/XMLWriter.java:64:	Parameter 's' is not assigned and could be declared final
src/codeshine/utils/XMLWriter.java:71:	New exception is thrown in catch block, original stack trace may be lost
src/codeshine/utils/XMLWriter.java:78:	Avoid using short method names
src/codeshine/utils/XMLWriter.java:81:	Local variable 'lineEnd' could be declared final
src/codeshine/utils/XMLWriter.java:87:	New exception is thrown in catch block, original stack trace may be lost
src/codeshine/views/CodeControl.java:1:	A high number of imports can indicate a high degree of coupling within an object.
src/codeshine/views/CodeControl.java:3:	Avoid unused imports such as 'java.awt.Cursor'
src/codeshine/views/CodeControl.java:5:	Avoid unused imports such as 'java.io.FileNotFoundException'
src/codeshine/views/CodeControl.java:7:	Avoid unused imports such as 'java.io.InputStream'
src/codeshine/views/CodeControl.java:8:	Avoid unused imports such as 'java.io.InputStreamReader'
src/codeshine/views/CodeControl.java:12:	Avoid unused imports such as 'org.eclipse.swt.custom.StyledTextContent'
src/codeshine/views/CodeControl.java:31:	Avoid unused imports such as 'com.sun.speech.freetts.audio.AudioPlayer'
src/codeshine/views/CodeControl.java:37:	The class 'CodeControl' has a Cyclomatic Complexity of 2 (Highest = 14).
src/codeshine/views/CodeControl.java:37:	The class 'CodeControl' has a Modified Cyclomatic Complexity of 2 (Highest = 10).
src/codeshine/views/CodeControl.java:37:	The class 'CodeControl' has a Standard Cyclomatic Complexity of 2 (Highest = 14).
src/codeshine/views/CodeControl.java:37:	This class has too many methods, consider refactoring it.
src/codeshine/views/CodeControl.java:37:	headerCommentRequirement Required
src/codeshine/views/CodeControl.java:38:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeControl.java:38:	fieldCommentRequirement Required
src/codeshine/views/CodeControl.java:39:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeControl.java:39:	Variables should start with a lowercase character, 'STLastOffset' starts with uppercase character.
src/codeshine/views/CodeControl.java:39:	fieldCommentRequirement Required
src/codeshine/views/CodeControl.java:40:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeControl.java:40:	fieldCommentRequirement Required
src/codeshine/views/CodeControl.java:41:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeControl.java:41:	fieldCommentRequirement Required
src/codeshine/views/CodeControl.java:42:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeControl.java:42:	Perhaps 'foregroundColor' could be replaced by a local variable.
src/codeshine/views/CodeControl.java:42:	Private field 'foregroundColor' could be made final; it is only initialized in the declaration or constructor.
src/codeshine/views/CodeControl.java:42:	fieldCommentRequirement Required
src/codeshine/views/CodeControl.java:44:	Avoid variables with short names like st
src/codeshine/views/CodeControl.java:44:	Parameter 'st' is not assigned and could be declared final
src/codeshine/views/CodeControl.java:44:	The constructor 'CodeControl' has a Cyclomatic Complexity of 14.
src/codeshine/views/CodeControl.java:44:	The constructor 'CodeControl' has a Modified Cyclomatic Complexity of 10.
src/codeshine/views/CodeControl.java:44:	The constructor 'CodeControl' has a Standard Cyclomatic Complexity of 14.
src/codeshine/views/CodeControl.java:44:	publicMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:47:	Local variable 'store' could be declared final
src/codeshine/views/CodeControl.java:48:	Local variable 'fontColor' could be declared final
src/codeshine/views/CodeControl.java:49:	Local variable 'backColor' could be declared final
src/codeshine/views/CodeControl.java:50:	Local variable 'highColor' could be declared final
src/codeshine/views/CodeControl.java:51:	Local variable 'font' could be declared final
src/codeshine/views/CodeControl.java:60:	Overridable method 'setHighLight' called during object construction
src/codeshine/views/CodeControl.java:65:	Avoid variables with short names like e
src/codeshine/views/CodeControl.java:65:	Parameter 'e' is not assigned and could be declared final
src/codeshine/views/CodeControl.java:65:	The method 'keyPressed' has a Cyclomatic Complexity of 11.
src/codeshine/views/CodeControl.java:65:	The method 'keyPressed' has a Standard Cyclomatic Complexity of 11.
src/codeshine/views/CodeControl.java:65:	publicMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:68:	A switch statement does not contain a break
src/codeshine/views/CodeControl.java:70:	Avoid using if statements without curly braces
src/codeshine/views/CodeControl.java:74:	Avoid using if statements without curly braces
src/codeshine/views/CodeControl.java:79:	System.out.println is used
src/codeshine/views/CodeControl.java:93:	System.out.print is used
src/codeshine/views/CodeControl.java:100:	Avoid variables with short names like e
src/codeshine/views/CodeControl.java:100:	Parameter 'e' is not assigned and could be declared final
src/codeshine/views/CodeControl.java:100:	publicMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:101:	System.out.println is used
src/codeshine/views/CodeControl.java:103:	Avoid variables with short names like e
src/codeshine/views/CodeControl.java:103:	Parameter 'e' is not assigned and could be declared final
src/codeshine/views/CodeControl.java:103:	publicMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:104:	System.out.println is used
src/codeshine/views/CodeControl.java:110:	publicMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:113:	Parameter 'backgroundColor' is not assigned and could be declared final
src/codeshine/views/CodeControl.java:113:	publicMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:118:	Parameter 'foregroundColor' is not assigned and could be declared final
src/codeshine/views/CodeControl.java:118:	publicMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:121:	Parameter 'hightlight' is not assigned and could be declared final
src/codeshine/views/CodeControl.java:121:	publicMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:127:	Parameter 'newFont' is not assigned and could be declared final
src/codeshine/views/CodeControl.java:127:	publicMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:131:	publicMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:135:	protectedMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:136:	System.out.println is used
src/codeshine/views/CodeControl.java:141:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeControl.java:142:	Local variable 'line' could be declared final
src/codeshine/views/CodeControl.java:143:	Local variable 'offset' could be declared final
src/codeshine/views/CodeControl.java:144:	Local variable 'endOffset' could be declared final
src/codeshine/views/CodeControl.java:151:	System.out.println is used
src/codeshine/views/CodeControl.java:152:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeControl.java:152:	System.out.println is used
src/codeshine/views/CodeControl.java:155:	Local variable 'file' could be declared final
src/codeshine/views/CodeControl.java:156:	Local variable 'voz' could be declared final
src/codeshine/views/CodeControl.java:157:	System.out.println is used
src/codeshine/views/CodeControl.java:163:	Local variable 'clip' could be declared final
src/codeshine/views/CodeControl.java:169:	System.out.println is used
src/codeshine/views/CodeControl.java:170:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/views/CodeControl.java:173:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/codeshine/views/CodeControl.java:175:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/views/CodeControl.java:179:	protectedMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:180:	Local variable 'current_font' could be declared final
src/codeshine/views/CodeControl.java:180:	Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'current_font' is not final.
src/codeshine/views/CodeControl.java:181:	Avoid variables with short names like fd
src/codeshine/views/CodeControl.java:181:	Local variable 'fd' could be declared final
src/codeshine/views/CodeControl.java:181:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeControl.java:182:	Local variable 'fontHeight' could be declared final
src/codeshine/views/CodeControl.java:182:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeControl.java:182:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeControl.java:183:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeControl.java:183:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeControl.java:186:	protectedMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:187:	Local variable 'current_font' could be declared final
src/codeshine/views/CodeControl.java:187:	Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'current_font' is not final.
src/codeshine/views/CodeControl.java:188:	Avoid variables with short names like fd
src/codeshine/views/CodeControl.java:188:	Local variable 'fd' could be declared final
src/codeshine/views/CodeControl.java:188:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeControl.java:189:	Local variable 'fontHeight' could be declared final
src/codeshine/views/CodeControl.java:189:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeControl.java:189:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeControl.java:190:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeControl.java:190:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeControl.java:194:	Parameter 'text' is not assigned and could be declared final
src/codeshine/views/CodeControl.java:194:	protectedMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:199:	Avoid really long methods.
src/codeshine/views/CodeControl.java:199:	protectedMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:201:	System.out.println is used
src/codeshine/views/CodeControl.java:210:	Avoid variables with short names like fr
src/codeshine/views/CodeControl.java:212:	Avoid variables with short names like br
src/codeshine/views/CodeControl.java:212:	Local variable 'br' could be declared final
src/codeshine/views/CodeControl.java:216:	System.out.println is used
src/codeshine/views/CodeControl.java:220:	publicMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:221:	Avoid variables with short names like wb
src/codeshine/views/CodeControl.java:221:	Local variable 'wb' could be declared final
src/codeshine/views/CodeControl.java:222:	Local variable 'win' could be declared final
src/codeshine/views/CodeControl.java:222:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeControl.java:223:	Avoid excessively long variable names like openPreferencesAction
src/codeshine/views/CodeControl.java:223:	Local variable 'openPreferencesAction' could be declared final
src/codeshine/views/CodeControl.java:223:	Potential violation of Law of Demeter (static property access)
src/codeshine/views/CodeControl.java:229:	publicMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:230:	System.out.println is used
src/codeshine/views/CodeControl.java:231:	Avoid variables with short names like wb
src/codeshine/views/CodeControl.java:231:	Local variable 'wb' could be declared final
src/codeshine/views/CodeControl.java:232:	Local variable 'win' could be declared final
src/codeshine/views/CodeControl.java:232:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeControl.java:233:	Local variable 'openFindAction' could be declared final
src/codeshine/views/CodeControl.java:233:	Potential violation of Law of Demeter (static property access)
src/codeshine/views/CodeControl.java:239:	Parameter 'offset' is not assigned and could be declared final
src/codeshine/views/CodeControl.java:239:	protectedMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:241:	Avoid variables with short names like wb
src/codeshine/views/CodeControl.java:241:	Local variable 'wb' could be declared final
src/codeshine/views/CodeControl.java:242:	Local variable 'win' could be declared final
src/codeshine/views/CodeControl.java:242:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeControl.java:243:	Local variable 'page' could be declared final
src/codeshine/views/CodeControl.java:243:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeControl.java:245:	Local variable 'abseditor' could be declared final
src/codeshine/views/CodeControl.java:245:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeControl.java:251:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/codeshine/views/CodeControl.java:251:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/views/CodeControl.java:255:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeControl.java:258:	Avoid variables with short names like e
src/codeshine/views/CodeControl.java:258:	Parameter 'e' is not assigned and could be declared final
src/codeshine/views/CodeControl.java:258:	publicMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:260:	Avoid using Literals in Conditional Statements
src/codeshine/views/CodeControl.java:263:	System.out.println is used
src/codeshine/views/CodeControl.java:265:	Avoid variables with short names like e
src/codeshine/views/CodeControl.java:265:	Parameter 'e' is not assigned and could be declared final
src/codeshine/views/CodeControl.java:265:	publicMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:267:	System.out.println is used
src/codeshine/views/CodeControl.java:269:	Avoid variables with short names like e
src/codeshine/views/CodeControl.java:269:	Parameter 'e' is not assigned and could be declared final
src/codeshine/views/CodeControl.java:269:	publicMethodCommentRequirement Required
src/codeshine/views/CodeControl.java:271:	System.out.println is used
src/codeshine/views/CodeView.java:1:	A high number of imports can indicate a high degree of coupling within an object.
src/codeshine/views/CodeView.java:46:	This class has too many methods, consider refactoring it.
src/codeshine/views/CodeView.java:46:	headerCommentRequirement Required
src/codeshine/views/CodeView.java:47:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeView.java:47:	fieldCommentRequirement Required
src/codeshine/views/CodeView.java:48:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeView.java:48:	fieldCommentRequirement Required
src/codeshine/views/CodeView.java:49:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeView.java:49:	fieldCommentRequirement Required
src/codeshine/views/CodeView.java:50:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeView.java:50:	fieldCommentRequirement Required
src/codeshine/views/CodeView.java:51:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeView.java:51:	fieldCommentRequirement Required
src/codeshine/views/CodeView.java:52:	Avoid excessively long variable names like openPreferencesAction
src/codeshine/views/CodeView.java:52:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeView.java:52:	fieldCommentRequirement Required
src/codeshine/views/CodeView.java:54:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeView.java:54:	fieldCommentRequirement Required
src/codeshine/views/CodeView.java:55:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeView.java:55:	fieldCommentRequirement Required
src/codeshine/views/CodeView.java:56:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeView.java:56:	fieldCommentRequirement Required
src/codeshine/views/CodeView.java:57:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeView.java:57:	fieldCommentRequirement Required
src/codeshine/views/CodeView.java:59:	Avoid variables with short names like ar
src/codeshine/views/CodeView.java:59:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeView.java:59:	fieldCommentRequirement Required
src/codeshine/views/CodeView.java:60:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeView.java:60:	fieldCommentRequirement Required
src/codeshine/views/CodeView.java:63:	Avoid excessively long variable names like preferenceListener
src/codeshine/views/CodeView.java:63:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/CodeView.java:63:	To avoid mistakes add a comment at the beginning of the preferenceListener field if you want a default access modifier
src/codeshine/views/CodeView.java:63:	Use explicit scoping instead of the default package private level
src/codeshine/views/CodeView.java:63:	fieldCommentRequirement Required
src/codeshine/views/CodeView.java:65:	Parameter 'event' is not assigned and could be declared final
src/codeshine/views/CodeView.java:65:	publicMethodCommentRequirement Required
src/codeshine/views/CodeView.java:66:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:70:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:70:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:71:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:71:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:73:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:73:	System.out.println is used
src/codeshine/views/CodeView.java:74:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:74:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:77:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:80:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:80:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:81:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:81:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:83:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:83:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:84:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:85:	System.out.println is used
src/codeshine/views/CodeView.java:86:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:86:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:87:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:87:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:89:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:89:	System.out.println is used
src/codeshine/views/CodeView.java:90:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:90:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:92:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:95:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:95:	Local variable 'newFont' could be declared final
src/codeshine/views/CodeView.java:96:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:96:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:98:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:100:	System.out.println is used
src/codeshine/views/CodeView.java:107:	Avoid unnecessary constructors - the compiler will generate these for you
src/codeshine/views/CodeView.java:107:	Document empty constructor
src/codeshine/views/CodeView.java:107:	It is a good practice to call super() in a constructor
src/codeshine/views/CodeView.java:113:	Parameter 'parent' is not assigned and could be declared final
src/codeshine/views/CodeView.java:121:	Parameter 'event' is not assigned and could be declared final
src/codeshine/views/CodeView.java:121:	publicMethodCommentRequirement Required
src/codeshine/views/CodeView.java:123:	Local variable 'offset' could be declared final
src/codeshine/views/CodeView.java:123:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:124:	System.out.println is used
src/codeshine/views/CodeView.java:133:	publicMethodCommentRequirement Required
src/codeshine/views/CodeView.java:134:	Local variable 'page' could be declared final
src/codeshine/views/CodeView.java:134:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:135:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeView.java:138:	Parameter 'part' is not assigned and could be declared final
src/codeshine/views/CodeView.java:138:	Parameter 'selection' is not assigned and could be declared final
src/codeshine/views/CodeView.java:138:	publicMethodCommentRequirement Required
src/codeshine/views/CodeView.java:141:	Local variable 'selected' could be declared final
src/codeshine/views/CodeView.java:141:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:146:	System.out.println is used
src/codeshine/views/CodeView.java:147:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:147:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:147:	System.out.println is used
src/codeshine/views/CodeView.java:150:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:150:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:150:	System.out.println is used
src/codeshine/views/CodeView.java:151:	Local variable 'editor' could be declared final
src/codeshine/views/CodeView.java:153:	Avoid variables with short names like dp
src/codeshine/views/CodeView.java:153:	Local variable 'dp' could be declared final
src/codeshine/views/CodeView.java:153:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeView.java:156:	Parameter 'event' is not assigned and could be declared final
src/codeshine/views/CodeView.java:156:	publicMethodCommentRequirement Required
src/codeshine/views/CodeView.java:157:	Local variable 'offset' could be declared final
src/codeshine/views/CodeView.java:157:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:159:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:162:	Local variable 'doc2' could be declared final
src/codeshine/views/CodeView.java:162:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeView.java:162:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeView.java:163:	Local variable 'select' could be declared final
src/codeshine/views/CodeView.java:163:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:163:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeView.java:166:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeView.java:167:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeView.java:167:	System.out.println is used
src/codeshine/views/CodeView.java:168:	System.out.println is used
src/codeshine/views/CodeView.java:172:	System.out.println is used
src/codeshine/views/CodeView.java:176:	Parameter 'text' is not assigned and could be declared final
src/codeshine/views/CodeView.java:179:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:179:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:180:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/codeshine/views/CodeView.java:180:	Avoid printStackTrace(); use a logger call instead.
src/codeshine/views/CodeView.java:182:	System.out.println is used
src/codeshine/views/CodeView.java:183:	Potential violation of Law of Demeter (static property access)
src/codeshine/views/CodeView.java:184:	Potential violation of Law of Demeter (static property access)
src/codeshine/views/CodeView.java:187:	publicMethodCommentRequirement Required
src/codeshine/views/CodeView.java:188:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:192:	Local variable 'menuMgr' could be declared final
src/codeshine/views/CodeView.java:194:	Local variable 'menu' could be declared final
src/codeshine/views/CodeView.java:195:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:196:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:198:	Avoid unused private methods such as 'showMessage(String)'.
src/codeshine/views/CodeView.java:198:	Parameter 'message' is not assigned and could be declared final
src/codeshine/views/CodeView.java:199:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:200:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:209:	Local variable 'bars' could be declared final
src/codeshine/views/CodeView.java:209:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:210:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeView.java:211:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeView.java:213:	Parameter 'manager' is not assigned and could be declared final
src/codeshine/views/CodeView.java:223:	Avoid unused private methods such as 'fillContextMenu(IMenuManager)'.
src/codeshine/views/CodeView.java:223:	Parameter 'manager' is not assigned and could be declared final
src/codeshine/views/CodeView.java:231:	Parameter 'manager' is not assigned and could be declared final
src/codeshine/views/CodeView.java:246:	publicMethodCommentRequirement Required
src/codeshine/views/CodeView.java:247:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:254:	publicMethodCommentRequirement Required
src/codeshine/views/CodeView.java:255:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:262:	publicMethodCommentRequirement Required
src/codeshine/views/CodeView.java:263:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:269:	publicMethodCommentRequirement Required
src/codeshine/views/CodeView.java:270:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:271:	System.out.println is used
src/codeshine/views/CodeView.java:272:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:273:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:274:	System.out.println is used
src/codeshine/views/CodeView.java:275:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:275:	Avoid variables with short names like r
src/codeshine/views/CodeView.java:275:	Local variable 'r' could be declared final
src/codeshine/views/CodeView.java:277:	System.out.println is used
src/codeshine/views/CodeView.java:278:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:279:	System.out.println is used
src/codeshine/views/CodeView.java:280:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:281:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:284:	System.out.println is used
src/codeshine/views/CodeView.java:285:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:286:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:287:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:298:	publicMethodCommentRequirement Required
src/codeshine/views/CodeView.java:299:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/CodeView.java:307:	Avoid variables with short names like wb
src/codeshine/views/CodeView.java:307:	Local variable 'wb' could be declared final
src/codeshine/views/CodeView.java:308:	Local variable 'win' could be declared final
src/codeshine/views/CodeView.java:308:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/CodeView.java:310:	Potential violation of Law of Demeter (static property access)
src/codeshine/views/CodeView.java:318:	Parameter 'site' is not assigned and could be declared final
src/codeshine/views/CodeView.java:318:	publicMethodCommentRequirement Required
src/codeshine/views/CodeView.java:322:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:322:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:322:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:326:	publicMethodCommentRequirement Required
src/codeshine/views/CodeView.java:327:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/CodeView.java:327:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/EscribirEnFichero1.java:3:	Comment is too large: Too many lines
src/codeshine/views/EscribirEnFichero1.java:6:	Comment is too large: Line too long
src/codeshine/views/EscribirEnFichero1.java:28:	Avoid using redundant field initializer for 'voice'
src/codeshine/views/EscribirEnFichero1.java:28:	Possible unsafe assignment to a non-final static field in a constructor.
src/codeshine/views/EscribirEnFichero1.java:28:	To avoid mistakes add a comment at the beginning of the voice field if you want a default access modifier
src/codeshine/views/EscribirEnFichero1.java:28:	Use explicit scoping instead of the default package private level
src/codeshine/views/EscribirEnFichero1.java:28:	fieldCommentRequirement Required
src/codeshine/views/EscribirEnFichero1.java:29:	A method/constructor shouldnt explicitly throw java.lang.Exception
src/codeshine/views/EscribirEnFichero1.java:29:	Parameter 'voiceName' is not assigned and could be declared final
src/codeshine/views/EscribirEnFichero1.java:29:	publicMethodCommentRequirement Required
src/codeshine/views/EscribirEnFichero1.java:31:	Local variable 'voiceManager' could be declared final
src/codeshine/views/EscribirEnFichero1.java:35:	System.out.println is used
src/codeshine/views/EscribirEnFichero1.java:37:	Avoid throwing raw exception types.
src/codeshine/views/EscribirEnFichero1.java:42:	A method/constructor shouldnt explicitly throw java.lang.Exception
src/codeshine/views/EscribirEnFichero1.java:42:	Parameter 'text' is not assigned and could be declared final
src/codeshine/views/EscribirEnFichero1.java:42:	publicMethodCommentRequirement Required
src/codeshine/views/EscribirEnFichero1.java:47:	A method/constructor shouldnt explicitly throw java.lang.Exception
src/codeshine/views/EscribirEnFichero1.java:47:	Parameter 'filename' is not assigned and could be declared final
src/codeshine/views/EscribirEnFichero1.java:47:	Parameter 'text' is not assigned and could be declared final
src/codeshine/views/EscribirEnFichero1.java:47:	publicMethodCommentRequirement Required
src/codeshine/views/EscribirEnFichero1.java:49:	Local variable 'type' could be declared final
src/codeshine/views/EscribirEnFichero1.java:51:	Avoid using if statements without curly braces
src/codeshine/views/EscribirEnFichero1.java:54:	System.out.println is used
src/codeshine/views/EscribirEnFichero1.java:60:	A method/constructor shouldnt explicitly throw java.lang.Exception
src/codeshine/views/EscribirEnFichero1.java:60:	publicMethodCommentRequirement Required
src/codeshine/views/EscribirEnFichero1.java:65:	publicMethodCommentRequirement Required
src/codeshine/views/EscribirEnFichero1.java:67:	System.out.println is used
src/codeshine/views/EscribirEnFichero1.java:68:	System.out.println is used
src/codeshine/views/EscribirEnFichero1.java:69:	Local variable 'voiceManager' could be declared final
src/codeshine/views/EscribirEnFichero1.java:70:	System.out.println is used
src/codeshine/views/EscribirEnFichero1.java:71:	Local variable 'voices' could be declared final
src/codeshine/views/EscribirEnFichero1.java:71:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/EscribirEnFichero1.java:73:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/EscribirEnFichero1.java:73:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/EscribirEnFichero1.java:73:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/EscribirEnFichero1.java:73:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/EscribirEnFichero1.java:73:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/EscribirEnFichero1.java:73:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/EscribirEnFichero1.java:73:	System.out.println is used
src/codeshine/views/EscribirEnFichero1.java:74:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/EscribirEnFichero1.java:74:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/EscribirEnFichero1.java:78:	Parameter 'file' is not assigned and could be declared final
src/codeshine/views/EscribirEnFichero1.java:78:	publicMethodCommentRequirement Required
src/codeshine/views/EscribirEnFichero1.java:80:	Local variable 'types' could be declared final
src/codeshine/views/EscribirEnFichero1.java:81:	Local variable 'extension' could be declared final
src/codeshine/views/EscribirEnFichero1.java:82:	Avoid using for statements without curly braces
src/codeshine/views/EscribirEnFichero1.java:83:	Avoid using if statements without curly braces
src/codeshine/views/EscribirEnFichero1.java:83:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/EscribirEnFichero1.java:83:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/EscribirEnFichero1.java:83:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/EscribirEnFichero1.java:84:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/views/EscribirEnFichero1.java:88:	Parameter 'path' is not assigned and could be declared final
src/codeshine/views/EscribirEnFichero1.java:88:	publicMethodCommentRequirement Required
src/codeshine/views/EscribirEnFichero1.java:90:	Local variable 'index' could be declared final
src/codeshine/views/EscribirEnFichero1.java:90:	String.indexOf(char) is faster than String.indexOf(String).
src/codeshine/views/EscribirEnFichero1.java:92:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/views/EscribirEnFichero1.java:92:	Avoid using if...else statements without curly braces
src/codeshine/views/EscribirEnFichero1.java:94:	Avoid using if...else statements without curly braces
src/codeshine/views/EscribirEnFichero1.java:97:	Parameter 'path' is not assigned and could be declared final
src/codeshine/views/EscribirEnFichero1.java:97:	publicMethodCommentRequirement Required
src/codeshine/views/EscribirEnFichero1.java:99:	Local variable 'index' could be declared final
src/codeshine/views/EscribirEnFichero1.java:99:	String.indexOf(char) is faster than String.indexOf(String).
src/codeshine/views/EscribirEnFichero1.java:101:	A method should have only one exit point, and that should be the last statement in the method
src/codeshine/views/EscribirEnFichero1.java:101:	Avoid using if...else statements without curly braces
src/codeshine/views/EscribirEnFichero1.java:103:	Avoid using if...else statements without curly braces
src/codeshine/views/EscribirEnFichero1.java:106:	Comment is too large: Too many lines
src/codeshine/views/EscribirEnFichero1.java:119:	Comment is too large: Line too long
src/codeshine/views/SampleView.java:15:	Comment is too large: Too many lines
src/codeshine/views/SampleView.java:38:	Avoid variables with short names like ID
src/codeshine/views/SampleView.java:40:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/SampleView.java:40:	fieldCommentRequirement Required
src/codeshine/views/SampleView.java:41:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/SampleView.java:41:	fieldCommentRequirement Required
src/codeshine/views/SampleView.java:42:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/SampleView.java:42:	fieldCommentRequirement Required
src/codeshine/views/SampleView.java:43:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/codeshine/views/SampleView.java:43:	fieldCommentRequirement Required
src/codeshine/views/SampleView.java:45:	Comment is too large: Too many lines
src/codeshine/views/SampleView.java:55:	Each class should declare at least one constructor
src/codeshine/views/SampleView.java:55:	To avoid mistakes add a comment at the beginning of the ViewContentProvider nested class if you want a default access modifier
src/codeshine/views/SampleView.java:55:	headerCommentRequirement Required
src/codeshine/views/SampleView.java:56:	Avoid variables with short names like v
src/codeshine/views/SampleView.java:56:	Document empty method body
src/codeshine/views/SampleView.java:56:	Parameter 'newInput' is not assigned and could be declared final
src/codeshine/views/SampleView.java:56:	Parameter 'oldInput' is not assigned and could be declared final
src/codeshine/views/SampleView.java:56:	Parameter 'v' is not assigned and could be declared final
src/codeshine/views/SampleView.java:56:	publicMethodCommentRequirement Required
src/codeshine/views/SampleView.java:58:	Document empty method body
src/codeshine/views/SampleView.java:58:	publicMethodCommentRequirement Required
src/codeshine/views/SampleView.java:60:	Parameter 'parent' is not assigned and could be declared final
src/codeshine/views/SampleView.java:60:	publicMethodCommentRequirement Required
src/codeshine/views/SampleView.java:64:	Each class should declare at least one constructor
src/codeshine/views/SampleView.java:64:	To avoid mistakes add a comment at the beginning of the ViewLabelProvider nested class if you want a default access modifier
src/codeshine/views/SampleView.java:64:	headerCommentRequirement Required
src/codeshine/views/SampleView.java:65:	Parameter 'index' is not assigned and could be declared final
src/codeshine/views/SampleView.java:65:	Parameter 'obj' is not assigned and could be declared final
src/codeshine/views/SampleView.java:65:	publicMethodCommentRequirement Required
src/codeshine/views/SampleView.java:68:	Parameter 'index' is not assigned and could be declared final
src/codeshine/views/SampleView.java:68:	Parameter 'obj' is not assigned and could be declared final
src/codeshine/views/SampleView.java:68:	publicMethodCommentRequirement Required
src/codeshine/views/SampleView.java:71:	Parameter 'obj' is not assigned and could be declared final
src/codeshine/views/SampleView.java:71:	publicMethodCommentRequirement Required
src/codeshine/views/SampleView.java:72:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:72:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:76:	Each class should declare at least one constructor
src/codeshine/views/SampleView.java:76:	To avoid mistakes add a comment at the beginning of the NameSorter nested class if you want a default access modifier
src/codeshine/views/SampleView.java:76:	headerCommentRequirement Required
src/codeshine/views/SampleView.java:82:	Avoid unnecessary constructors - the compiler will generate these for you
src/codeshine/views/SampleView.java:82:	Document empty constructor
src/codeshine/views/SampleView.java:82:	It is a good practice to call super() in a constructor
src/codeshine/views/SampleView.java:89:	Parameter 'parent' is not assigned and could be declared final
src/codeshine/views/SampleView.java:97:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:97:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:105:	Local variable 'menuMgr' could be declared final
src/codeshine/views/SampleView.java:108:	Parameter 'manager' is not assigned and could be declared final
src/codeshine/views/SampleView.java:108:	publicMethodCommentRequirement Required
src/codeshine/views/SampleView.java:109:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/SampleView.java:109:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:109:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:112:	Local variable 'menu' could be declared final
src/codeshine/views/SampleView.java:113:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:114:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:118:	Local variable 'bars' could be declared final
src/codeshine/views/SampleView.java:118:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:119:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/SampleView.java:120:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/SampleView.java:123:	Parameter 'manager' is not assigned and could be declared final
src/codeshine/views/SampleView.java:129:	Parameter 'manager' is not assigned and could be declared final
src/codeshine/views/SampleView.java:136:	Parameter 'manager' is not assigned and could be declared final
src/codeshine/views/SampleView.java:143:	publicMethodCommentRequirement Required
src/codeshine/views/SampleView.java:144:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/SampleView.java:149:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:149:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:149:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:149:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:153:	publicMethodCommentRequirement Required
src/codeshine/views/SampleView.java:154:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/SampleView.java:159:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:159:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:159:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:159:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:162:	publicMethodCommentRequirement Required
src/codeshine/views/SampleView.java:163:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/SampleView.java:163:	Local variable 'selection' could be declared final
src/codeshine/views/SampleView.java:164:	Local variable 'obj' could be declared final
src/codeshine/views/SampleView.java:164:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:165:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/SampleView.java:165:	Potential violation of Law of Demeter (object not created locally)
src/codeshine/views/SampleView.java:172:	Parameter 'event' is not assigned and could be declared final
src/codeshine/views/SampleView.java:172:	publicMethodCommentRequirement Required
src/codeshine/views/SampleView.java:173:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/codeshine/views/SampleView.java:177:	Parameter 'message' is not assigned and could be declared final
src/codeshine/views/SampleView.java:178:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:179:	Potential violation of Law of Demeter (method chain calls)
src/codeshine/views/SampleView.java:188:	Potential violation of Law of Demeter (method chain calls)
